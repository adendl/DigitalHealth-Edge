apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.52"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.52"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2023-02-15T04:52:44Z"
    generateName: data-access-api-7b585d8684-
    labels:
      app: data-access-api
      app.kubernetes.io/component: data-access-api
      app.kubernetes.io/name: data-access-api
      deployment: data-access-api
      pod-template-hash: 7b585d8684
    name: data-access-api-7b585d8684-4vl8z
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: data-access-api-7b585d8684
      uid: 6173a1b0-ca79-46d5-a77d-b2be779defb1
    resourceVersion: "452969"
    uid: 420bb8ff-e2e6-4d70-a876-675363c3690b
  spec:
    containers:
    - env:
      - name: DATABASE_URL
        value: mongodb://username:password@mongo:27017
      image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-access-api@sha256:c73ed5a9b0c38b16223bf114a73f129957d104751407ac01d2e6b2236f817f8a
      imagePullPolicy: IfNotPresent
      name: data-access-api
      ports:
      - containerPort: 3005
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000680000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gshvf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-hwfdt
    nodeName: crc-lgph7-master-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000680000
      seLinuxOptions:
        level: s0:c26,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-gshvf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T04:52:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:15:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:15:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T04:52:44Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://5e0f3e79b1c9cdcef24d136c40fcb66d9e200ba2e119de1c22b7a1b91fb290bc
      image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-access-api@sha256:c73ed5a9b0c38b16223bf114a73f129957d104751407ac01d2e6b2236f817f8a
      imageID: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-access-api@sha256:c73ed5a9b0c38b16223bf114a73f129957d104751407ac01d2e6b2236f817f8a
      lastState: {}
      name: data-access-api
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-02-15T23:15:22Z"
    hostIP: 192.168.126.11
    phase: Running
    podIP: 10.217.0.52
    podIPs:
    - ip: 10.217.0.52
    qosClass: BestEffort
    startTime: "2023-02-15T04:52:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.55"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.55"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2023-01-30T11:29:44Z"
    generateName: data-generator-5778898fdd-
    labels:
      app: data-generator
      app.kubernetes.io/component: data-generator
      app.kubernetes.io/name: data-generator
      deployment: data-generator
      pod-template-hash: 5778898fdd
    name: data-generator-5778898fdd-w6gkj
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: data-generator-5778898fdd
      uid: 719e2905-e57b-4321-a152-4d715438ee95
    resourceVersion: "452944"
    uid: b89ca6cf-7ade-40ca-b9b2-4a8c34a811ac
  spec:
    containers:
    - env:
      - name: HOSTURL
        value: http://patient-vitals-api-digitalhealth-edge.apps-crc.testing
      - name: TIMEOUTTIME
        value: "100"
      image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-generator@sha256:4ce36f2d5195a253aefc4d824e73ab321e124fc72520d829c910b16382ce1e9b
      imagePullPolicy: IfNotPresent
      name: data-generator
      ports:
      - containerPort: 3002
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000680000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tf5rj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-hwfdt
    nodeName: crc-lgph7-master-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000680000
      seLinuxOptions:
        level: s0:c26,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-tf5rj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-30T11:29:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:15:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:15:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-30T11:29:44Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://4b09b80562e94ce08dfdcc7aed1b3c02f62da1e1a340f965d4e565a011b6d5ad
      image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-generator@sha256:4ce36f2d5195a253aefc4d824e73ab321e124fc72520d829c910b16382ce1e9b
      imageID: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-generator@sha256:4ce36f2d5195a253aefc4d824e73ab321e124fc72520d829c910b16382ce1e9b
      lastState: {}
      name: data-generator
      ready: true
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2023-02-15T23:15:20Z"
    hostIP: 192.168.126.11
    phase: Running
    podIP: 10.217.0.55
    podIPs:
    - ip: 10.217.0.55
    qosClass: BestEffort
    startTime: "2023-01-30T11:29:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.10"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.10"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2023-02-15T02:23:55Z"
    generateName: kafdrop-6f57cc44b7-
    labels:
      app: kafdrop
      deployment: kafdrop
      pod-template-hash: 6f57cc44b7
    name: kafdrop-6f57cc44b7-94l69
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kafdrop-6f57cc44b7
      uid: 93354ec4-f34f-4a04-b79e-cb57c2e3289c
    resourceVersion: "453824"
    uid: 25a736fb-e112-49ef-aa54-bf20fb4a315d
  spec:
    containers:
    - env:
      - name: KAFKA_BROKERCONNECT
        value: my-cluster-kafka-brokers:9092
      image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/kafdrop@sha256:5337c9e0e2dee204bdde53e90cf97001f44fb9e8c3380340436efa844901a3f4
      imagePullPolicy: Always
      name: kafdrop
      ports:
      - containerPort: 9000
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000680000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hcdr2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-hwfdt
    nodeName: crc-lgph7-master-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000680000
      seLinuxOptions:
        level: s0:c26,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-hcdr2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T02:23:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:16:31Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:16:31Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T02:23:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://b5919d7c429946ae248a191ed5c466bedb92ea966d9961f3c4d4e696f959c13c
      image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/kafdrop@sha256:5337c9e0e2dee204bdde53e90cf97001f44fb9e8c3380340436efa844901a3f4
      imageID: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/kafdrop@sha256:5337c9e0e2dee204bdde53e90cf97001f44fb9e8c3380340436efa844901a3f4
      lastState: {}
      name: kafdrop
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-02-15T23:16:30Z"
    hostIP: 192.168.126.11
    phase: Running
    podIP: 10.217.0.10
    podIPs:
    - ip: 10.217.0.10
    qosClass: BestEffort
    startTime: "2023-02-15T02:23:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.23"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.23"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2023-02-15T03:42:41Z"
    generateName: mongo-6bfcf775fd-
    labels:
      app: mongo
      deployment: mongo
      pod-template-hash: 6bfcf775fd
    name: mongo-6bfcf775fd-pjmgf
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: mongo-6bfcf775fd
      uid: 1b152e6d-c202-4189-9ac9-c454aa79b671
    resourceVersion: "453835"
    uid: f1bd7078-6076-4cfb-8e69-57f3f5aa9756
  spec:
    containers:
    - env:
      - name: MONGO_INITDB_ROOT_USERNAME
        value: username
      - name: MONGO_INITDB_ROOT_PASSWORD
        value: password
      image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/mongo@sha256:695e5eb141aa8516bd4857ee987d65401a424d0e5f8e0244ab89f6da981ddf65
      imagePullPolicy: Always
      name: mongo
      ports:
      - containerPort: 27017
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000680000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data/configdb
        name: mongo-1
      - mountPath: /data/db
        name: mongo-2
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tq7jm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-hwfdt
    nodeName: crc-lgph7-master-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000680000
      seLinuxOptions:
        level: s0:c26,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: mongo-1
    - emptyDir: {}
      name: mongo-2
    - name: kube-api-access-tq7jm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T03:42:41Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:16:31Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:16:31Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T03:42:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://5c955c098080ef25f9553ade2494a8d07914a0a99264ae1eacb36a21f21bffc0
      image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/mongo@sha256:695e5eb141aa8516bd4857ee987d65401a424d0e5f8e0244ab89f6da981ddf65
      imageID: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/mongo@sha256:695e5eb141aa8516bd4857ee987d65401a424d0e5f8e0244ab89f6da981ddf65
      lastState: {}
      name: mongo
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-02-15T23:16:30Z"
    hostIP: 192.168.126.11
    phase: Running
    podIP: 10.217.0.23
    podIPs:
    - ip: 10.217.0.23
    qosClass: BestEffort
    startTime: "2023-02-15T03:42:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.59"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.59"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
      strimzi.io/cluster-ca-cert-generation: "0"
    creationTimestamp: "2023-01-25T08:36:53Z"
    generateName: my-cluster-entity-operator-5c65798567-
    labels:
      app: eclipse-mosquitto-app
      app.kubernetes.io/instance: my-cluster
      app.kubernetes.io/managed-by: strimzi-cluster-operator
      app.kubernetes.io/name: entity-operator
      app.kubernetes.io/part-of: strimzi-my-cluster
      com.company: Red_Hat
      pod-template-hash: 5c65798567
      rht.comp: AMQ_Streams
      rht.comp_ver: "2.3"
      rht.prod_name: Red_Hat_Application_Foundations
      rht.prod_ver: 2023.Q1
      rht.subcomp: entity-operator
      rht.subcomp_t: infrastructure
      strimzi.io/cluster: my-cluster
      strimzi.io/kind: Kafka
      strimzi.io/name: my-cluster-entity-operator
    name: my-cluster-entity-operator-5c65798567-75lsp
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: my-cluster-entity-operator-5c65798567
      uid: 0424d77b-6f3b-448b-96e9-acc65e6ec1ce
    resourceVersion: "454239"
    uid: 236ebc36-3407-491a-9e56-98e7b7102426
  spec:
    containers:
    - args:
      - /opt/strimzi/bin/topic_operator_run.sh
      env:
      - name: STRIMZI_RESOURCE_LABELS
        value: strimzi.io/cluster=my-cluster
      - name: STRIMZI_KAFKA_BOOTSTRAP_SERVERS
        value: my-cluster-kafka-bootstrap:9091
      - name: STRIMZI_ZOOKEEPER_CONNECT
        value: localhost:2181
      - name: STRIMZI_NAMESPACE
        value: digitalhealth-edge
      - name: STRIMZI_FULL_RECONCILIATION_INTERVAL_MS
        value: "120000"
      - name: STRIMZI_ZOOKEEPER_SESSION_TIMEOUT_MS
        value: "18000"
      - name: STRIMZI_TOPIC_METADATA_MAX_ATTEMPTS
        value: "6"
      - name: STRIMZI_SECURITY_PROTOCOL
        value: SSL
      - name: STRIMZI_TLS_ENABLED
        value: "true"
      - name: STRIMZI_GC_LOG_ENABLED
        value: "false"
      image: registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:943e5c7a28c8ee63302d7813950793477b2ba026106c48829ff9f083e8d5132b
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthy
          port: healthcheck
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: topic-operator
      ports:
      - containerPort: 8080
        name: healthcheck
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: healthcheck
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000680000
      startupProbe:
        failureThreshold: 12
        httpGet:
          path: /healthy
          port: healthcheck
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: strimzi-to-tmp
      - mountPath: /opt/topic-operator/custom-config/
        name: entity-topic-operator-metrics-and-logging
      - mountPath: /etc/eto-certs/
        name: eto-certs
      - mountPath: /etc/tls-sidecar/cluster-ca-certs/
        name: cluster-ca-certs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7w9tr
        readOnly: true
    - args:
      - /opt/strimzi/bin/user_operator_run.sh
      env:
      - name: STRIMZI_KAFKA_BOOTSTRAP_SERVERS
        value: my-cluster-kafka-bootstrap:9091
      - name: STRIMZI_NAMESPACE
        value: digitalhealth-edge
      - name: STRIMZI_LABELS
        value: strimzi.io/cluster=my-cluster
      - name: STRIMZI_FULL_RECONCILIATION_INTERVAL_MS
        value: "120000"
      - name: STRIMZI_CA_KEY_NAME
        value: my-cluster-clients-ca
      - name: STRIMZI_CA_CERT_NAME
        value: my-cluster-clients-ca-cert
      - name: STRIMZI_CA_NAMESPACE
        value: digitalhealth-edge
      - name: STRIMZI_CA_VALIDITY
        value: "365"
      - name: STRIMZI_CA_RENEWAL
        value: "30"
      - name: STRIMZI_CLUSTER_CA_CERT_SECRET_NAME
        value: my-cluster-cluster-ca-cert
      - name: STRIMZI_EO_KEY_SECRET_NAME
        value: my-cluster-entity-user-operator-certs
      - name: STRIMZI_GC_LOG_ENABLED
        value: "false"
      - name: STRIMZI_SECRET_PREFIX
      - name: STRIMZI_ACLS_ADMIN_API_SUPPORTED
        value: "false"
      - name: STRIMZI_KRAFT_ENABLED
        value: "false"
      image: registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:943e5c7a28c8ee63302d7813950793477b2ba026106c48829ff9f083e8d5132b
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthy
          port: healthcheck
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: user-operator
      ports:
      - containerPort: 8081
        name: healthcheck
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: healthcheck
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000680000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: strimzi-uo-tmp
      - mountPath: /opt/user-operator/custom-config/
        name: entity-user-operator-metrics-and-logging
      - mountPath: /etc/euo-certs/
        name: euo-certs
      - mountPath: /etc/tls-sidecar/cluster-ca-certs/
        name: cluster-ca-certs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7w9tr
        readOnly: true
    - command:
      - /opt/stunnel/entity_operator_stunnel_run.sh
      env:
      - name: TLS_SIDECAR_LOG_LEVEL
        value: notice
      - name: STRIMZI_ZOOKEEPER_CONNECT
        value: my-cluster-zookeeper-client:2181
      image: registry.redhat.io/amq7/amq-streams-kafka-33-rhel8@sha256:cfc95d049315d334ae9e8d0f2aaefa037c5c601c3dfb7dd1cfb7c1ba4039efc5
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /opt/stunnel/entity_operator_stunnel_pre_stop.sh
      livenessProbe:
        exec:
          command:
          - /opt/stunnel/stunnel_healthcheck.sh
          - "2181"
        failureThreshold: 3
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: tls-sidecar
      readinessProbe:
        exec:
          command:
          - /opt/stunnel/stunnel_healthcheck.sh
          - "2181"
        failureThreshold: 3
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000680000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: strimzi-tls-sidecar-tmp
      - mountPath: /etc/eto-certs/
        name: eto-certs
      - mountPath: /etc/tls-sidecar/cluster-ca-certs/
        name: cluster-ca-certs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7w9tr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: my-cluster-entity-operator-dockercfg-vqd4c
    nodeName: crc-lgph7-master-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000680000
      seLinuxOptions:
        level: s0:c26,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: my-cluster-entity-operator
    serviceAccountName: my-cluster-entity-operator
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: my-cluster-entity-topic-operator-config
      name: entity-topic-operator-metrics-and-logging
    - emptyDir:
        medium: Memory
        sizeLimit: 5Mi
      name: strimzi-to-tmp
    - name: eto-certs
      secret:
        defaultMode: 288
        secretName: my-cluster-entity-topic-operator-certs
    - configMap:
        defaultMode: 420
        name: my-cluster-entity-user-operator-config
      name: entity-user-operator-metrics-and-logging
    - emptyDir:
        medium: Memory
        sizeLimit: 5Mi
      name: strimzi-uo-tmp
    - name: euo-certs
      secret:
        defaultMode: 288
        secretName: my-cluster-entity-user-operator-certs
    - emptyDir:
        medium: Memory
        sizeLimit: 5Mi
      name: strimzi-tls-sidecar-tmp
    - name: cluster-ca-certs
      secret:
        defaultMode: 288
        secretName: my-cluster-cluster-ca-cert
    - name: kube-api-access-7w9tr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-25T08:36:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:17:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:17:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-25T08:36:53Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://cac4e49075b237024c40a8db3d0095a0b5637f1afbb2deec564ea169e9778d53
      image: registry.redhat.io/amq7/amq-streams-kafka-33-rhel8@sha256:cfc95d049315d334ae9e8d0f2aaefa037c5c601c3dfb7dd1cfb7c1ba4039efc5
      imageID: registry.redhat.io/amq7/amq-streams-kafka-33-rhel8@sha256:598b336b6d23c53ac5a372db03e3443e9de67dc8524ac2b061035bc82ebf356f
      lastState: {}
      name: tls-sidecar
      ready: true
      restartCount: 8
      started: true
      state:
        running:
          startedAt: "2023-02-15T23:15:27Z"
    - containerID: cri-o://834d74d212eac0936139b9ff721478590ff4c8955b8bbf420d87586ff5b4f982
      image: registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:943e5c7a28c8ee63302d7813950793477b2ba026106c48829ff9f083e8d5132b
      imageID: registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:943e5c7a28c8ee63302d7813950793477b2ba026106c48829ff9f083e8d5132b
      lastState: {}
      name: topic-operator
      ready: true
      restartCount: 15
      started: true
      state:
        running:
          startedAt: "2023-02-15T23:15:20Z"
    - containerID: cri-o://3875d88c14d862f86395ef2a50f4eb2b9d761ea68b2f30350aabff4cf787153b
      image: registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:943e5c7a28c8ee63302d7813950793477b2ba026106c48829ff9f083e8d5132b
      imageID: registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:943e5c7a28c8ee63302d7813950793477b2ba026106c48829ff9f083e8d5132b
      lastState:
        terminated:
          containerID: cri-o://2373384376b93306c826136c3159e640a382ca9824459ab2c8b03e47aae39c61
          exitCode: 0
          finishedAt: "2023-02-15T23:15:55Z"
          reason: Completed
          startedAt: "2023-02-15T23:15:24Z"
      name: user-operator
      ready: true
      restartCount: 20
      started: true
      state:
        running:
          startedAt: "2023-02-15T23:15:58Z"
    hostIP: 192.168.126.11
    phase: Running
    podIP: 10.217.0.59
    podIPs:
    - ip: 10.217.0.59
    qosClass: BestEffort
    startTime: "2023-01-25T08:36:53Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.38"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.38"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
      strimzi.io/broker-configuration-hash: 1da5052a
      strimzi.io/clients-ca-cert-generation: "0"
      strimzi.io/cluster-ca-cert-generation: "0"
      strimzi.io/inter-broker-protocol-version: "3.3"
      strimzi.io/kafka-version: 3.3.1
      strimzi.io/log-message-format-version: "3.3"
      strimzi.io/logging-appenders-hash: e893ac9f
      strimzi.io/revision: 2a105165
    creationTimestamp: "2023-01-25T03:57:23Z"
    labels:
      app: eclipse-mosquitto-app
      app.kubernetes.io/instance: my-cluster
      app.kubernetes.io/managed-by: strimzi-cluster-operator
      app.kubernetes.io/name: kafka
      app.kubernetes.io/part-of: strimzi-my-cluster
      com.company: Red_Hat
      rht.comp: AMQ_Streams
      rht.comp_ver: "2.3"
      rht.prod_name: Red_Hat_Application_Foundations
      rht.prod_ver: 2023.Q1
      rht.subcomp: kafka-broker
      rht.subcomp_t: application
      statefulset.kubernetes.io/pod-name: my-cluster-kafka-0
      strimzi.io/cluster: my-cluster
      strimzi.io/controller: strimzipodset
      strimzi.io/controller-name: my-cluster-kafka
      strimzi.io/kind: Kafka
      strimzi.io/name: my-cluster-kafka
      strimzi.io/pod-name: my-cluster-kafka-0
    name: my-cluster-kafka-0
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: core.strimzi.io/v1beta2
      blockOwnerDeletion: false
      controller: true
      kind: StrimziPodSet
      name: my-cluster-kafka
      uid: 19adef7f-1b80-4039-8cd4-47323793ae6f
    resourceVersion: "454052"
    uid: 3fa8b346-a97c-4a73-9ca2-a18f453bbe8f
  spec:
    affinity: {}
    containers:
    - command:
      - /opt/kafka/kafka_run.sh
      env:
      - name: KAFKA_METRICS_ENABLED
        value: "false"
      - name: STRIMZI_KAFKA_GC_LOG_ENABLED
        value: "false"
      - name: KAFKA_HEAP_OPTS
        value: -Xms128M
      image: registry.redhat.io/amq7/amq-streams-kafka-33-rhel8@sha256:cfc95d049315d334ae9e8d0f2aaefa037c5c601c3dfb7dd1cfb7c1ba4039efc5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /opt/kafka/kafka_liveness.sh
        failureThreshold: 3
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kafka
      ports:
      - containerPort: 9090
        name: tcp-ctrlplane
        protocol: TCP
      - containerPort: 9091
        name: tcp-replication
        protocol: TCP
      - containerPort: 9092
        name: tcp-clients
        protocol: TCP
      - containerPort: 9093
        name: tcp-clientstls
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - test
          - -f
          - /var/opt/kafka/kafka-ready
        failureThreshold: 3
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000680000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kafka/data
        name: data
      - mountPath: /tmp
        name: strimzi-tmp
      - mountPath: /opt/kafka/cluster-ca-certs
        name: cluster-ca
      - mountPath: /opt/kafka/broker-certs
        name: broker-certs
      - mountPath: /opt/kafka/client-ca-certs
        name: client-ca-cert
      - mountPath: /opt/kafka/custom-config/
        name: kafka-metrics-and-logging
      - mountPath: /var/opt/kafka
        name: ready-files
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lw4w6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: my-cluster-kafka-0
    imagePullSecrets:
    - name: my-cluster-kafka-dockercfg-qxczq
    nodeName: crc-lgph7-master-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000680000
      seLinuxOptions:
        level: s0:c26,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: my-cluster-kafka
    serviceAccountName: my-cluster-kafka
    subdomain: my-cluster-kafka-brokers
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: data
    - emptyDir:
        medium: Memory
        sizeLimit: 5Mi
      name: strimzi-tmp
    - name: cluster-ca
      secret:
        defaultMode: 288
        secretName: my-cluster-cluster-ca-cert
    - name: broker-certs
      secret:
        defaultMode: 288
        secretName: my-cluster-kafka-brokers
    - name: client-ca-cert
      secret:
        defaultMode: 288
        secretName: my-cluster-clients-ca-cert
    - configMap:
        defaultMode: 420
        name: my-cluster-kafka-0
      name: kafka-metrics-and-logging
    - emptyDir:
        medium: Memory
        sizeLimit: 1Ki
      name: ready-files
    - name: kube-api-access-lw4w6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-25T03:57:23Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:17:05Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:17:05Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-25T03:57:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://4bc61f0b63118d2f6a89e7b7ed0387ec4f5f22192d9aaf7e92b7093dceddf56c
      image: registry.redhat.io/amq7/amq-streams-kafka-33-rhel8@sha256:cfc95d049315d334ae9e8d0f2aaefa037c5c601c3dfb7dd1cfb7c1ba4039efc5
      imageID: registry.redhat.io/amq7/amq-streams-kafka-33-rhel8@sha256:598b336b6d23c53ac5a372db03e3443e9de67dc8524ac2b061035bc82ebf356f
      lastState:
        terminated:
          containerID: cri-o://0baff343ebcc98b48de5e05833343ff014afb90f08d24f5dbaed2557a04b4b05
          exitCode: 1
          finishedAt: "2023-02-15T23:16:25Z"
          reason: Error
          startedAt: "2023-02-15T23:15:45Z"
      name: kafka
      ready: true
      restartCount: 23
      started: true
      state:
        running:
          startedAt: "2023-02-15T23:16:30Z"
    hostIP: 192.168.126.11
    phase: Running
    podIP: 10.217.0.38
    podIPs:
    - ip: 10.217.0.38
    qosClass: BestEffort
    startTime: "2023-01-25T03:57:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.39"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.39"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
      strimzi.io/broker-configuration-hash: d3eb5cc6
      strimzi.io/clients-ca-cert-generation: "0"
      strimzi.io/cluster-ca-cert-generation: "0"
      strimzi.io/inter-broker-protocol-version: "3.3"
      strimzi.io/kafka-version: 3.3.1
      strimzi.io/log-message-format-version: "3.3"
      strimzi.io/logging-appenders-hash: e893ac9f
      strimzi.io/revision: e8a8df29
    creationTimestamp: "2023-01-25T03:57:23Z"
    labels:
      app: eclipse-mosquitto-app
      app.kubernetes.io/instance: my-cluster
      app.kubernetes.io/managed-by: strimzi-cluster-operator
      app.kubernetes.io/name: kafka
      app.kubernetes.io/part-of: strimzi-my-cluster
      com.company: Red_Hat
      rht.comp: AMQ_Streams
      rht.comp_ver: "2.3"
      rht.prod_name: Red_Hat_Application_Foundations
      rht.prod_ver: 2023.Q1
      rht.subcomp: kafka-broker
      rht.subcomp_t: application
      statefulset.kubernetes.io/pod-name: my-cluster-kafka-1
      strimzi.io/cluster: my-cluster
      strimzi.io/controller: strimzipodset
      strimzi.io/controller-name: my-cluster-kafka
      strimzi.io/kind: Kafka
      strimzi.io/name: my-cluster-kafka
      strimzi.io/pod-name: my-cluster-kafka-1
    name: my-cluster-kafka-1
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: core.strimzi.io/v1beta2
      blockOwnerDeletion: false
      controller: true
      kind: StrimziPodSet
      name: my-cluster-kafka
      uid: 19adef7f-1b80-4039-8cd4-47323793ae6f
    resourceVersion: "454043"
    uid: c605a166-95a2-4820-8917-886854df0bd8
  spec:
    affinity: {}
    containers:
    - command:
      - /opt/kafka/kafka_run.sh
      env:
      - name: KAFKA_METRICS_ENABLED
        value: "false"
      - name: STRIMZI_KAFKA_GC_LOG_ENABLED
        value: "false"
      - name: KAFKA_HEAP_OPTS
        value: -Xms128M
      image: registry.redhat.io/amq7/amq-streams-kafka-33-rhel8@sha256:cfc95d049315d334ae9e8d0f2aaefa037c5c601c3dfb7dd1cfb7c1ba4039efc5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /opt/kafka/kafka_liveness.sh
        failureThreshold: 3
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kafka
      ports:
      - containerPort: 9090
        name: tcp-ctrlplane
        protocol: TCP
      - containerPort: 9091
        name: tcp-replication
        protocol: TCP
      - containerPort: 9092
        name: tcp-clients
        protocol: TCP
      - containerPort: 9093
        name: tcp-clientstls
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - test
          - -f
          - /var/opt/kafka/kafka-ready
        failureThreshold: 3
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000680000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kafka/data
        name: data
      - mountPath: /tmp
        name: strimzi-tmp
      - mountPath: /opt/kafka/cluster-ca-certs
        name: cluster-ca
      - mountPath: /opt/kafka/broker-certs
        name: broker-certs
      - mountPath: /opt/kafka/client-ca-certs
        name: client-ca-cert
      - mountPath: /opt/kafka/custom-config/
        name: kafka-metrics-and-logging
      - mountPath: /var/opt/kafka
        name: ready-files
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8vfp5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: my-cluster-kafka-1
    imagePullSecrets:
    - name: my-cluster-kafka-dockercfg-qxczq
    nodeName: crc-lgph7-master-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000680000
      seLinuxOptions:
        level: s0:c26,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: my-cluster-kafka
    serviceAccountName: my-cluster-kafka
    subdomain: my-cluster-kafka-brokers
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: data
    - emptyDir:
        medium: Memory
        sizeLimit: 5Mi
      name: strimzi-tmp
    - name: cluster-ca
      secret:
        defaultMode: 288
        secretName: my-cluster-cluster-ca-cert
    - name: broker-certs
      secret:
        defaultMode: 288
        secretName: my-cluster-kafka-brokers
    - name: client-ca-cert
      secret:
        defaultMode: 288
        secretName: my-cluster-clients-ca-cert
    - configMap:
        defaultMode: 420
        name: my-cluster-kafka-1
      name: kafka-metrics-and-logging
    - emptyDir:
        medium: Memory
        sizeLimit: 1Ki
      name: ready-files
    - name: kube-api-access-8vfp5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-25T03:57:23Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:17:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:17:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-25T03:57:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://6c60ebc88602d9c2e53c3a8dd3d4fc0e9a4bfbfd7faefd5c7593b90e90931dd9
      image: registry.redhat.io/amq7/amq-streams-kafka-33-rhel8@sha256:cfc95d049315d334ae9e8d0f2aaefa037c5c601c3dfb7dd1cfb7c1ba4039efc5
      imageID: registry.redhat.io/amq7/amq-streams-kafka-33-rhel8@sha256:598b336b6d23c53ac5a372db03e3443e9de67dc8524ac2b061035bc82ebf356f
      lastState:
        terminated:
          containerID: cri-o://08ea78386beb215e7dcf26f0a215f0fb39959685f7ed5938244b0cb6a11f36e5
          exitCode: 1
          finishedAt: "2023-02-15T23:16:28Z"
          reason: Error
          startedAt: "2023-02-15T23:15:47Z"
      name: kafka
      ready: true
      restartCount: 25
      started: true
      state:
        running:
          startedAt: "2023-02-15T23:16:30Z"
    hostIP: 192.168.126.11
    phase: Running
    podIP: 10.217.0.39
    podIPs:
    - ip: 10.217.0.39
    qosClass: BestEffort
    startTime: "2023-01-25T03:57:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.60"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.60"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
      strimzi.io/broker-configuration-hash: a9c5ba28
      strimzi.io/clients-ca-cert-generation: "0"
      strimzi.io/cluster-ca-cert-generation: "0"
      strimzi.io/inter-broker-protocol-version: "3.3"
      strimzi.io/kafka-version: 3.3.1
      strimzi.io/log-message-format-version: "3.3"
      strimzi.io/logging-appenders-hash: e893ac9f
      strimzi.io/revision: ed0678ab
    creationTimestamp: "2023-01-25T03:57:23Z"
    labels:
      app: eclipse-mosquitto-app
      app.kubernetes.io/instance: my-cluster
      app.kubernetes.io/managed-by: strimzi-cluster-operator
      app.kubernetes.io/name: kafka
      app.kubernetes.io/part-of: strimzi-my-cluster
      com.company: Red_Hat
      rht.comp: AMQ_Streams
      rht.comp_ver: "2.3"
      rht.prod_name: Red_Hat_Application_Foundations
      rht.prod_ver: 2023.Q1
      rht.subcomp: kafka-broker
      rht.subcomp_t: application
      statefulset.kubernetes.io/pod-name: my-cluster-kafka-2
      strimzi.io/cluster: my-cluster
      strimzi.io/controller: strimzipodset
      strimzi.io/controller-name: my-cluster-kafka
      strimzi.io/kind: Kafka
      strimzi.io/name: my-cluster-kafka
      strimzi.io/pod-name: my-cluster-kafka-2
    name: my-cluster-kafka-2
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: core.strimzi.io/v1beta2
      blockOwnerDeletion: false
      controller: true
      kind: StrimziPodSet
      name: my-cluster-kafka
      uid: 19adef7f-1b80-4039-8cd4-47323793ae6f
    resourceVersion: "454007"
    uid: e7b795c9-a691-4ed5-aec3-410b54060ff6
  spec:
    affinity: {}
    containers:
    - command:
      - /opt/kafka/kafka_run.sh
      env:
      - name: KAFKA_METRICS_ENABLED
        value: "false"
      - name: STRIMZI_KAFKA_GC_LOG_ENABLED
        value: "false"
      - name: KAFKA_HEAP_OPTS
        value: -Xms128M
      image: registry.redhat.io/amq7/amq-streams-kafka-33-rhel8@sha256:cfc95d049315d334ae9e8d0f2aaefa037c5c601c3dfb7dd1cfb7c1ba4039efc5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /opt/kafka/kafka_liveness.sh
        failureThreshold: 3
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kafka
      ports:
      - containerPort: 9090
        name: tcp-ctrlplane
        protocol: TCP
      - containerPort: 9091
        name: tcp-replication
        protocol: TCP
      - containerPort: 9092
        name: tcp-clients
        protocol: TCP
      - containerPort: 9093
        name: tcp-clientstls
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - test
          - -f
          - /var/opt/kafka/kafka-ready
        failureThreshold: 3
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000680000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kafka/data
        name: data
      - mountPath: /tmp
        name: strimzi-tmp
      - mountPath: /opt/kafka/cluster-ca-certs
        name: cluster-ca
      - mountPath: /opt/kafka/broker-certs
        name: broker-certs
      - mountPath: /opt/kafka/client-ca-certs
        name: client-ca-cert
      - mountPath: /opt/kafka/custom-config/
        name: kafka-metrics-and-logging
      - mountPath: /var/opt/kafka
        name: ready-files
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lwf65
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: my-cluster-kafka-2
    imagePullSecrets:
    - name: my-cluster-kafka-dockercfg-qxczq
    nodeName: crc-lgph7-master-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000680000
      seLinuxOptions:
        level: s0:c26,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: my-cluster-kafka
    serviceAccountName: my-cluster-kafka
    subdomain: my-cluster-kafka-brokers
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: data
    - emptyDir:
        medium: Memory
        sizeLimit: 5Mi
      name: strimzi-tmp
    - name: cluster-ca
      secret:
        defaultMode: 288
        secretName: my-cluster-cluster-ca-cert
    - name: broker-certs
      secret:
        defaultMode: 288
        secretName: my-cluster-kafka-brokers
    - name: client-ca-cert
      secret:
        defaultMode: 288
        secretName: my-cluster-clients-ca-cert
    - configMap:
        defaultMode: 420
        name: my-cluster-kafka-2
      name: kafka-metrics-and-logging
    - emptyDir:
        medium: Memory
        sizeLimit: 1Ki
      name: ready-files
    - name: kube-api-access-lwf65
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-25T03:57:23Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:16:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:16:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-25T03:57:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://b8c82afb6aa9dd65c1c76dfe8472fac9e54ca301cb8e9fd3596cfc2aca5bc36b
      image: registry.redhat.io/amq7/amq-streams-kafka-33-rhel8@sha256:cfc95d049315d334ae9e8d0f2aaefa037c5c601c3dfb7dd1cfb7c1ba4039efc5
      imageID: registry.redhat.io/amq7/amq-streams-kafka-33-rhel8@sha256:598b336b6d23c53ac5a372db03e3443e9de67dc8524ac2b061035bc82ebf356f
      lastState:
        terminated:
          containerID: cri-o://3bc9915df75f1b41babd97986a2c911f6db5793c0966a56e9fea69abf4034196
          exitCode: 1
          finishedAt: "2023-02-15T23:16:07Z"
          reason: Error
          startedAt: "2023-02-15T23:15:20Z"
      name: kafka
      ready: true
      restartCount: 24
      started: true
      state:
        running:
          startedAt: "2023-02-15T23:16:29Z"
    hostIP: 192.168.126.11
    phase: Running
    podIP: 10.217.0.60
    podIPs:
    - ip: 10.217.0.60
    qosClass: BestEffort
    startTime: "2023-01-25T03:57:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.42"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.42"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
      strimzi.io/cluster-ca-cert-generation: "0"
      strimzi.io/logging-hash: 0f057cb0
      strimzi.io/revision: df6bed86
    creationTimestamp: "2023-01-25T03:57:00Z"
    labels:
      app: eclipse-mosquitto-app
      app.kubernetes.io/instance: my-cluster
      app.kubernetes.io/managed-by: strimzi-cluster-operator
      app.kubernetes.io/name: zookeeper
      app.kubernetes.io/part-of: strimzi-my-cluster
      com.company: Red_Hat
      rht.comp: AMQ_Streams
      rht.comp_ver: "2.3"
      rht.prod_name: Red_Hat_Application_Foundations
      rht.prod_ver: 2023.Q1
      rht.subcomp: zookeeper
      rht.subcomp_t: infrastructure
      statefulset.kubernetes.io/pod-name: my-cluster-zookeeper-0
      strimzi.io/cluster: my-cluster
      strimzi.io/controller: strimzipodset
      strimzi.io/controller-name: my-cluster-zookeeper
      strimzi.io/kind: Kafka
      strimzi.io/name: my-cluster-zookeeper
      strimzi.io/pod-name: my-cluster-zookeeper-0
    name: my-cluster-zookeeper-0
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: core.strimzi.io/v1beta2
      blockOwnerDeletion: false
      controller: true
      kind: StrimziPodSet
      name: my-cluster-zookeeper
      uid: 8bfbfdff-a08d-47d4-a5a3-a557e073314f
    resourceVersion: "453684"
    uid: 302c8e78-ee02-4052-a144-8fa05adc60c8
  spec:
    containers:
    - command:
      - /opt/kafka/zookeeper_run.sh
      env:
      - name: ZOOKEEPER_METRICS_ENABLED
        value: "false"
      - name: ZOOKEEPER_SNAPSHOT_CHECK_ENABLED
        value: "true"
      - name: STRIMZI_KAFKA_GC_LOG_ENABLED
        value: "false"
      - name: KAFKA_HEAP_OPTS
        value: -Xms128M
      - name: ZOOKEEPER_CONFIGURATION
        value: |
          tickTime=2000
          initLimit=5
          syncLimit=2
          autopurge.purgeInterval=1
          admin.enableServer=false
      image: registry.redhat.io/amq7/amq-streams-kafka-33-rhel8@sha256:cfc95d049315d334ae9e8d0f2aaefa037c5c601c3dfb7dd1cfb7c1ba4039efc5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /opt/kafka/zookeeper_healthcheck.sh
        failureThreshold: 3
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: zookeeper
      ports:
      - containerPort: 2888
        name: tcp-clustering
        protocol: TCP
      - containerPort: 3888
        name: tcp-election
        protocol: TCP
      - containerPort: 2181
        name: tcp-clients
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /opt/kafka/zookeeper_healthcheck.sh
        failureThreshold: 3
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000680000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: strimzi-tmp
      - mountPath: /var/lib/zookeeper
        name: data
      - mountPath: /opt/kafka/custom-config/
        name: zookeeper-metrics-and-logging
      - mountPath: /opt/kafka/zookeeper-node-certs/
        name: zookeeper-nodes
      - mountPath: /opt/kafka/cluster-ca-certs/
        name: cluster-ca-certs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2wt9l
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: my-cluster-zookeeper-0
    imagePullSecrets:
    - name: my-cluster-zookeeper-dockercfg-d96rm
    nodeName: crc-lgph7-master-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000680000
      seLinuxOptions:
        level: s0:c26,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: my-cluster-zookeeper
    serviceAccountName: my-cluster-zookeeper
    subdomain: my-cluster-zookeeper-nodes
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: data
    - emptyDir:
        medium: Memory
        sizeLimit: 5Mi
      name: strimzi-tmp
    - configMap:
        defaultMode: 420
        name: my-cluster-zookeeper-config
      name: zookeeper-metrics-and-logging
    - name: zookeeper-nodes
      secret:
        defaultMode: 288
        secretName: my-cluster-zookeeper-nodes
    - name: cluster-ca-certs
      secret:
        defaultMode: 288
        secretName: my-cluster-cluster-ca-cert
    - name: kube-api-access-2wt9l
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-25T03:57:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:16:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:16:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-25T03:57:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://b3c394cdc9553f40e4883ef4ae056156b8869ebdee988bd5a792b4d173e083e7
      image: registry.redhat.io/amq7/amq-streams-kafka-33-rhel8@sha256:cfc95d049315d334ae9e8d0f2aaefa037c5c601c3dfb7dd1cfb7c1ba4039efc5
      imageID: registry.redhat.io/amq7/amq-streams-kafka-33-rhel8@sha256:598b336b6d23c53ac5a372db03e3443e9de67dc8524ac2b061035bc82ebf356f
      lastState:
        terminated:
          containerID: cri-o://4bc02b3b108742d0f707867fdf2b0ad4637330b98bdf02b5f4fa513067580ea0
          exitCode: 0
          finishedAt: "2023-02-15T23:15:45Z"
          reason: Completed
          startedAt: "2023-02-15T23:14:59Z"
      name: zookeeper
      ready: true
      restartCount: 21
      started: true
      state:
        running:
          startedAt: "2023-02-15T23:15:47Z"
    hostIP: 192.168.126.11
    phase: Running
    podIP: 10.217.0.42
    podIPs:
    - ip: 10.217.0.42
    qosClass: BestEffort
    startTime: "2023-01-25T03:57:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.15"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.15"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
      strimzi.io/cluster-ca-cert-generation: "0"
      strimzi.io/logging-hash: 0f057cb0
      strimzi.io/revision: 495fc22f
    creationTimestamp: "2023-01-25T03:57:00Z"
    labels:
      app: eclipse-mosquitto-app
      app.kubernetes.io/instance: my-cluster
      app.kubernetes.io/managed-by: strimzi-cluster-operator
      app.kubernetes.io/name: zookeeper
      app.kubernetes.io/part-of: strimzi-my-cluster
      com.company: Red_Hat
      rht.comp: AMQ_Streams
      rht.comp_ver: "2.3"
      rht.prod_name: Red_Hat_Application_Foundations
      rht.prod_ver: 2023.Q1
      rht.subcomp: zookeeper
      rht.subcomp_t: infrastructure
      statefulset.kubernetes.io/pod-name: my-cluster-zookeeper-1
      strimzi.io/cluster: my-cluster
      strimzi.io/controller: strimzipodset
      strimzi.io/controller-name: my-cluster-zookeeper
      strimzi.io/kind: Kafka
      strimzi.io/name: my-cluster-zookeeper
      strimzi.io/pod-name: my-cluster-zookeeper-1
    name: my-cluster-zookeeper-1
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: core.strimzi.io/v1beta2
      blockOwnerDeletion: false
      controller: true
      kind: StrimziPodSet
      name: my-cluster-zookeeper
      uid: 8bfbfdff-a08d-47d4-a5a3-a557e073314f
    resourceVersion: "453674"
    uid: e7e84cee-788d-4500-acbc-9dda46779d77
  spec:
    containers:
    - command:
      - /opt/kafka/zookeeper_run.sh
      env:
      - name: ZOOKEEPER_METRICS_ENABLED
        value: "false"
      - name: ZOOKEEPER_SNAPSHOT_CHECK_ENABLED
        value: "true"
      - name: STRIMZI_KAFKA_GC_LOG_ENABLED
        value: "false"
      - name: KAFKA_HEAP_OPTS
        value: -Xms128M
      - name: ZOOKEEPER_CONFIGURATION
        value: |
          tickTime=2000
          initLimit=5
          syncLimit=2
          autopurge.purgeInterval=1
          admin.enableServer=false
      image: registry.redhat.io/amq7/amq-streams-kafka-33-rhel8@sha256:cfc95d049315d334ae9e8d0f2aaefa037c5c601c3dfb7dd1cfb7c1ba4039efc5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /opt/kafka/zookeeper_healthcheck.sh
        failureThreshold: 3
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: zookeeper
      ports:
      - containerPort: 2888
        name: tcp-clustering
        protocol: TCP
      - containerPort: 3888
        name: tcp-election
        protocol: TCP
      - containerPort: 2181
        name: tcp-clients
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /opt/kafka/zookeeper_healthcheck.sh
        failureThreshold: 3
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000680000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: strimzi-tmp
      - mountPath: /var/lib/zookeeper
        name: data
      - mountPath: /opt/kafka/custom-config/
        name: zookeeper-metrics-and-logging
      - mountPath: /opt/kafka/zookeeper-node-certs/
        name: zookeeper-nodes
      - mountPath: /opt/kafka/cluster-ca-certs/
        name: cluster-ca-certs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xkpqs
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: my-cluster-zookeeper-1
    imagePullSecrets:
    - name: my-cluster-zookeeper-dockercfg-d96rm
    nodeName: crc-lgph7-master-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000680000
      seLinuxOptions:
        level: s0:c26,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: my-cluster-zookeeper
    serviceAccountName: my-cluster-zookeeper
    subdomain: my-cluster-zookeeper-nodes
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: data
    - emptyDir:
        medium: Memory
        sizeLimit: 5Mi
      name: strimzi-tmp
    - configMap:
        defaultMode: 420
        name: my-cluster-zookeeper-config
      name: zookeeper-metrics-and-logging
    - name: zookeeper-nodes
      secret:
        defaultMode: 288
        secretName: my-cluster-zookeeper-nodes
    - name: cluster-ca-certs
      secret:
        defaultMode: 288
        secretName: my-cluster-cluster-ca-cert
    - name: kube-api-access-xkpqs
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-25T03:57:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:16:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:16:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-25T03:57:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://f6073b1fb6da2f96a79a13fbd1cbf800e93b19e60b440c647b03a5a3a4968974
      image: registry.redhat.io/amq7/amq-streams-kafka-33-rhel8@sha256:cfc95d049315d334ae9e8d0f2aaefa037c5c601c3dfb7dd1cfb7c1ba4039efc5
      imageID: registry.redhat.io/amq7/amq-streams-kafka-33-rhel8@sha256:598b336b6d23c53ac5a372db03e3443e9de67dc8524ac2b061035bc82ebf356f
      lastState:
        terminated:
          containerID: cri-o://646788f8eab3bde21f97ee37e218a75365e564404a6d8ca742591a1626d10610
          exitCode: 0
          finishedAt: "2023-02-15T23:15:26Z"
          reason: Completed
          startedAt: "2023-02-15T23:14:44Z"
      name: zookeeper
      ready: true
      restartCount: 21
      started: true
      state:
        running:
          startedAt: "2023-02-15T23:15:32Z"
    hostIP: 192.168.126.11
    phase: Running
    podIP: 10.217.0.15
    podIPs:
    - ip: 10.217.0.15
    qosClass: BestEffort
    startTime: "2023-01-25T03:57:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.2"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.2"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
      strimzi.io/cluster-ca-cert-generation: "0"
      strimzi.io/logging-hash: 0f057cb0
      strimzi.io/revision: 0273c816
    creationTimestamp: "2023-01-25T03:57:00Z"
    labels:
      app: eclipse-mosquitto-app
      app.kubernetes.io/instance: my-cluster
      app.kubernetes.io/managed-by: strimzi-cluster-operator
      app.kubernetes.io/name: zookeeper
      app.kubernetes.io/part-of: strimzi-my-cluster
      com.company: Red_Hat
      rht.comp: AMQ_Streams
      rht.comp_ver: "2.3"
      rht.prod_name: Red_Hat_Application_Foundations
      rht.prod_ver: 2023.Q1
      rht.subcomp: zookeeper
      rht.subcomp_t: infrastructure
      statefulset.kubernetes.io/pod-name: my-cluster-zookeeper-2
      strimzi.io/cluster: my-cluster
      strimzi.io/controller: strimzipodset
      strimzi.io/controller-name: my-cluster-zookeeper
      strimzi.io/kind: Kafka
      strimzi.io/name: my-cluster-zookeeper
      strimzi.io/pod-name: my-cluster-zookeeper-2
    name: my-cluster-zookeeper-2
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: core.strimzi.io/v1beta2
      blockOwnerDeletion: false
      controller: true
      kind: StrimziPodSet
      name: my-cluster-zookeeper
      uid: 8bfbfdff-a08d-47d4-a5a3-a557e073314f
    resourceVersion: "453667"
    uid: 6a9b002e-1bbd-4e5d-ba84-7df36743cbb1
  spec:
    containers:
    - command:
      - /opt/kafka/zookeeper_run.sh
      env:
      - name: ZOOKEEPER_METRICS_ENABLED
        value: "false"
      - name: ZOOKEEPER_SNAPSHOT_CHECK_ENABLED
        value: "true"
      - name: STRIMZI_KAFKA_GC_LOG_ENABLED
        value: "false"
      - name: KAFKA_HEAP_OPTS
        value: -Xms128M
      - name: ZOOKEEPER_CONFIGURATION
        value: |
          tickTime=2000
          initLimit=5
          syncLimit=2
          autopurge.purgeInterval=1
          admin.enableServer=false
      image: registry.redhat.io/amq7/amq-streams-kafka-33-rhel8@sha256:cfc95d049315d334ae9e8d0f2aaefa037c5c601c3dfb7dd1cfb7c1ba4039efc5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /opt/kafka/zookeeper_healthcheck.sh
        failureThreshold: 3
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: zookeeper
      ports:
      - containerPort: 2888
        name: tcp-clustering
        protocol: TCP
      - containerPort: 3888
        name: tcp-election
        protocol: TCP
      - containerPort: 2181
        name: tcp-clients
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /opt/kafka/zookeeper_healthcheck.sh
        failureThreshold: 3
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000680000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: strimzi-tmp
      - mountPath: /var/lib/zookeeper
        name: data
      - mountPath: /opt/kafka/custom-config/
        name: zookeeper-metrics-and-logging
      - mountPath: /opt/kafka/zookeeper-node-certs/
        name: zookeeper-nodes
      - mountPath: /opt/kafka/cluster-ca-certs/
        name: cluster-ca-certs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f7f8s
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: my-cluster-zookeeper-2
    imagePullSecrets:
    - name: my-cluster-zookeeper-dockercfg-d96rm
    nodeName: crc-lgph7-master-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000680000
      seLinuxOptions:
        level: s0:c26,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: my-cluster-zookeeper
    serviceAccountName: my-cluster-zookeeper
    subdomain: my-cluster-zookeeper-nodes
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: data
    - emptyDir:
        medium: Memory
        sizeLimit: 5Mi
      name: strimzi-tmp
    - configMap:
        defaultMode: 420
        name: my-cluster-zookeeper-config
      name: zookeeper-metrics-and-logging
    - name: zookeeper-nodes
      secret:
        defaultMode: 288
        secretName: my-cluster-zookeeper-nodes
    - name: cluster-ca-certs
      secret:
        defaultMode: 288
        secretName: my-cluster-cluster-ca-cert
    - name: kube-api-access-f7f8s
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-25T03:57:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:16:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:16:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-25T03:57:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://f3b9a28ade178f766706394856b742a815c5dc3d9286fce48fbc3fe5b292724b
      image: registry.redhat.io/amq7/amq-streams-kafka-33-rhel8@sha256:cfc95d049315d334ae9e8d0f2aaefa037c5c601c3dfb7dd1cfb7c1ba4039efc5
      imageID: registry.redhat.io/amq7/amq-streams-kafka-33-rhel8@sha256:598b336b6d23c53ac5a372db03e3443e9de67dc8524ac2b061035bc82ebf356f
      lastState:
        terminated:
          containerID: cri-o://852e80905c944b6c2ecfa3b3e6514d839e4b885c1f09b7b73e22fc4950378787
          exitCode: 0
          finishedAt: "2023-02-15T23:15:27Z"
          reason: Completed
          startedAt: "2023-02-15T23:14:40Z"
      name: zookeeper
      ready: true
      restartCount: 23
      started: true
      state:
        running:
          startedAt: "2023-02-15T23:15:34Z"
    hostIP: 192.168.126.11
    phase: Running
    podIP: 10.217.0.2
    podIPs:
    - ip: 10.217.0.2
    qosClass: BestEffort
    startTime: "2023-01-25T03:57:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.56"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.56"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2023-01-30T11:28:28Z"
    generateName: patient-vitals-api-859f896c9b-
    labels:
      app: patient-vitals-api
      app.kubernetes.io/component: patient-vitals-api
      app.kubernetes.io/name: patient-vitals-api
      deployment: patient-vitals-api
      pod-template-hash: 859f896c9b
    name: patient-vitals-api-859f896c9b-hcnpq
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: patient-vitals-api-859f896c9b
      uid: 68e578f9-aa22-4d7c-9f98-ef31a48815f5
    resourceVersion: "452970"
    uid: 22893eff-d86a-4943-bf0e-8ee487b9ce98
  spec:
    containers:
    - env:
      - name: HOSTURL
        value: my-cluster-kafka-brokers:9092
      image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/patient-vitals-api@sha256:8bf180231d9a3a211abc83e60bf8b10d6e75a25c4c9c3d1dc09b8209b015b361
      imagePullPolicy: IfNotPresent
      name: patient-vitals-api
      ports:
      - containerPort: 3000
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000680000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vkbr8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-hwfdt
    nodeName: crc-lgph7-master-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000680000
      seLinuxOptions:
        level: s0:c26,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-vkbr8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-30T11:28:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:15:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:15:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-30T11:28:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://5c58c65efc5dde0a2f67187d611b9a1fb20f729ffb0351d723a76c2e2e8fdbf2
      image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/patient-vitals-api@sha256:8bf180231d9a3a211abc83e60bf8b10d6e75a25c4c9c3d1dc09b8209b015b361
      imageID: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/patient-vitals-api@sha256:8bf180231d9a3a211abc83e60bf8b10d6e75a25c4c9c3d1dc09b8209b015b361
      lastState: {}
      name: patient-vitals-api
      ready: true
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2023-02-15T23:15:22Z"
    hostIP: 192.168.126.11
    phase: Running
    podIP: 10.217.0.56
    podIPs:
    - ip: 10.217.0.56
    qosClass: BestEffort
    startTime: "2023-01-30T11:28:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.51"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.51"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2023-01-30T11:28:31Z"
    generateName: py-kafka-7449f54ddb-
    labels:
      app: py-kafka
      app.kubernetes.io/component: py-kafka
      app.kubernetes.io/name: py-kafka
      deployment: py-kafka
      pod-template-hash: 7449f54ddb
    name: py-kafka-7449f54ddb-s42lr
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: py-kafka-7449f54ddb
      uid: 71f229ac-f815-4fdf-a96e-40b12e373884
    resourceVersion: "453993"
    uid: b7b23790-42d9-467c-bcce-fa4c23e40780
  spec:
    containers:
    - env:
      - name: HOSTURL
        value: my-cluster-kafka-brokers:9092
      - name: DATABASE_URL
        value: mongodb://username:password@mongo:27017
      image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/py-kafka@sha256:97c05a57aacc984d998e59ac0e78e8a0d29efec28ff2a58fe8a715683b28cfe2
      imagePullPolicy: IfNotPresent
      name: py-kafka
      ports:
      - containerPort: 8080
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000680000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dx94p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-hwfdt
    nodeName: crc-lgph7-master-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000680000
      seLinuxOptions:
        level: s0:c26,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-dx94p
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-01-30T11:28:31Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:16:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:16:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-01-30T11:28:31Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://9c6a5d5a60fdf85e6e769a3f4c3459f21b32f282a002a6b2cca1f3c716629f8e
      image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/py-kafka:v31
      imageID: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/py-kafka@sha256:97c05a57aacc984d998e59ac0e78e8a0d29efec28ff2a58fe8a715683b28cfe2
      lastState:
        terminated:
          containerID: cri-o://5478bbb3feb8c1d554f5e66b52a6250a6403231abae3a7d28270291d843f44e7
          exitCode: 1
          finishedAt: "2023-02-15T23:16:31Z"
          reason: Error
          startedAt: "2023-02-15T23:16:30Z"
      name: py-kafka
      ready: true
      restartCount: 15
      started: true
      state:
        running:
          startedAt: "2023-02-15T23:16:54Z"
    hostIP: 192.168.126.11
    phase: Running
    podIP: 10.217.0.51
    podIPs:
    - ip: 10.217.0.51
    qosClass: BestEffort
    startTime: "2023-01-30T11:28:31Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.54"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.217.0.54"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2023-02-15T03:35:56Z"
    generateName: react-frontend-5fd95fb496-
    labels:
      app: react-frontend
      app.kubernetes.io/component: react-frontend
      app.kubernetes.io/name: react-frontend
      deployment: react-frontend
      pod-template-hash: 5fd95fb496
    name: react-frontend-5fd95fb496-wwnfq
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: react-frontend-5fd95fb496
      uid: 2ff72c6c-1259-442b-bd3b-f1bee4bf10dd
    resourceVersion: "452971"
    uid: 7ad24230-6def-48f9-9650-cb4d7015e138
  spec:
    containers:
    - image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/react-frontend@sha256:2f3e7e93a321e5179ad29d31814ea4df5bf2048a5ded8a7f9d5ae8b67329d246
      imagePullPolicy: IfNotPresent
      name: react-frontend
      ports:
      - containerPort: 3000
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000680000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7g9fx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-hwfdt
    nodeName: crc-lgph7-master-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000680000
      seLinuxOptions:
        level: s0:c26,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-7g9fx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T03:35:56Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:15:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T23:15:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-02-15T03:35:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://28dcf8db42fae30977f76ef1cd2c4a3abd92522fd0b4db21bab8a06e56601dcc
      image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/react-frontend:v2
      imageID: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/react-frontend@sha256:2f3e7e93a321e5179ad29d31814ea4df5bf2048a5ded8a7f9d5ae8b67329d246
      lastState: {}
      name: react-frontend
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-02-15T23:15:22Z"
    hostIP: 192.168.126.11
    phase: Running
    podIP: 10.217.0.54
    podIPs:
    - ip: 10.217.0.54
    qosClass: BestEffort
    startTime: "2023-02-15T03:35:56Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mongo"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-30T03:24:52Z"
    labels:
      app: data-access-api
      app.kubernetes.io/component: data-access-api
      app.kubernetes.io/instance: data-access-api
      app.kubernetes.io/name: data-access-api
      app.kubernetes.io/part-of: eclipse-mosquitto-app
      app.openshift.io/runtime-version: v1997
    name: data-access-api
    namespace: digitalhealth-edge
    resourceVersion: "451620"
    uid: 48884045-b6a7-4383-a52c-c52f4c79d2e0
  spec:
    clusterIP: 10.217.4.180
    clusterIPs:
    - 10.217.4.180
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: 3005-tcp
      port: 3005
      protocol: TCP
      targetPort: 3005
    selector:
      app: data-access-api
      deployment: data-access-api
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"patient-vitals-api"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-24T03:02:12Z"
    labels:
      app: data-generator
      app.kubernetes.io/component: data-generator
      app.kubernetes.io/instance: data-generator
      app.kubernetes.io/name: data-generator
      app.kubernetes.io/part-of: eclipse-mosquitto-app
      app.openshift.io/runtime-version: v2
    name: data-generator
    namespace: digitalhealth-edge
    resourceVersion: "269479"
    uid: b9294847-481f-4047-bfc8-cf470d760ef1
  spec:
    clusterIP: 10.217.5.149
    clusterIPs:
    - 10.217.5.149
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: 3002-tcp
      port: 3002
      protocol: TCP
      targetPort: 3002
    selector:
      app: data-generator
      deployment: data-generator
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-24T02:14:42Z"
    labels:
      app: eclipse-mosquitto
      app.kubernetes.io/component: eclipse-mosquitto
      app.kubernetes.io/instance: eclipse-mosquitto
      app.kubernetes.io/name: eclipse-mosquitto
      app.kubernetes.io/part-of: eclipse-mosquitto-app
      app.openshift.io/runtime-version: 1.6.15
    name: eclipse-mosquitto
    namespace: digitalhealth-edge
    resourceVersion: "197336"
    uid: e4c675f9-7d4c-4114-b522-e418b8d6a197
  spec:
    clusterIP: 10.217.5.22
    clusterIPs:
    - 10.217.5.22
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: 1883-tcp
      port: 1883
      protocol: TCP
      targetPort: 1883
    selector:
      app: eclipse-mosquitto
      deployment: eclipse-mosquitto
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"my-cluster-entity-operator"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-02-15T02:23:55Z"
    labels:
      app: kafdrop
      app.kubernetes.io/component: kafdrop
      app.kubernetes.io/instance: kafdrop
      app.kubernetes.io/name: kafdrop
      app.openshift.io/runtime-version: latest
    name: kafdrop
    namespace: digitalhealth-edge
    resourceVersion: "414842"
    uid: c49867a0-d16c-4d93-8e21-6904b20286a6
  spec:
    clusterIP: 10.217.4.113
    clusterIPs:
    - 10.217.4.113
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: 9000-tcp
      port: 9000
      protocol: TCP
      targetPort: 9000
    selector:
      app: kafdrop
      deployment: kafdrop
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-25T11:05:16Z"
    labels:
      app: mongo
      app.kubernetes.io/component: mongo
      app.kubernetes.io/instance: mongo
      app.kubernetes.io/name: mongo
      app.kubernetes.io/part-of: eclipse-mosquitto-app
      app.openshift.io/runtime-version: latest
    name: mongo
    namespace: digitalhealth-edge
    resourceVersion: "299299"
    uid: 7e5085bb-83c6-43ab-8536-173180ca9f8a
  spec:
    clusterIP: 10.217.5.136
    clusterIPs:
    - 10.217.5.136
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: 27017-tcp
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      app: mongo
      deployment: mongo
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      app.openshift.io/connects-to: '[{"apiVersion":"apps.openshift.io/v1","kind":"DeploymentConfig","name":"postgresql"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-24T03:47:31Z"
    labels:
      app: mqtt-python
      app.kubernetes.io/component: mqtt-python
      app.kubernetes.io/instance: mqtt-python
      app.kubernetes.io/name: mqtt-python
      app.kubernetes.io/part-of: eclipse-mosquitto-app
      app.openshift.io/runtime-version: v4
    name: mqtt-python
    namespace: digitalhealth-edge
    resourceVersion: "215451"
    uid: e06c9f0f-8c5c-4ca6-a01c-ea39f2e6322d
  spec:
    clusterIP: 10.217.4.164
    clusterIPs:
    - 10.217.4.164
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: 3000-tcp
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: mqtt-python
      deployment: mqtt-python
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      strimzi.io/discovery: |-
        [ {
          "port" : 9092,
          "tls" : false,
          "protocol" : "kafka",
          "auth" : "none"
        }, {
          "port" : 9093,
          "tls" : true,
          "protocol" : "kafka",
          "auth" : "none"
        } ]
    creationTimestamp: "2023-01-25T03:57:22Z"
    labels:
      app: eclipse-mosquitto-app
      app.kubernetes.io/instance: my-cluster
      app.kubernetes.io/managed-by: strimzi-cluster-operator
      app.kubernetes.io/name: kafka
      app.kubernetes.io/part-of: strimzi-my-cluster
      strimzi.io/cluster: my-cluster
      strimzi.io/discovery: "true"
      strimzi.io/kind: Kafka
      strimzi.io/name: my-cluster-kafka
    name: my-cluster-kafka-bootstrap
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: kafka.strimzi.io/v1beta2
      blockOwnerDeletion: false
      controller: false
      kind: Kafka
      name: my-cluster
      uid: e2ce24c1-d5fe-42f9-afc7-787330ebdac6
    resourceVersion: "261666"
    uid: 0076df3f-ff44-4c5d-9a2d-b1f747420142
  spec:
    clusterIP: 10.217.5.61
    clusterIPs:
    - 10.217.5.61
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-replication
      port: 9091
      protocol: TCP
      targetPort: 9091
    - name: tcp-clients
      port: 9092
      protocol: TCP
      targetPort: 9092
    - name: tcp-clientstls
      port: 9093
      protocol: TCP
      targetPort: 9093
    selector:
      strimzi.io/cluster: my-cluster
      strimzi.io/kind: Kafka
      strimzi.io/name: my-cluster-kafka
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    creationTimestamp: "2023-01-25T03:57:22Z"
    labels:
      app: eclipse-mosquitto-app
      app.kubernetes.io/instance: my-cluster
      app.kubernetes.io/managed-by: strimzi-cluster-operator
      app.kubernetes.io/name: kafka
      app.kubernetes.io/part-of: strimzi-my-cluster
      strimzi.io/cluster: my-cluster
      strimzi.io/kind: Kafka
      strimzi.io/name: my-cluster-kafka
    name: my-cluster-kafka-brokers
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: kafka.strimzi.io/v1beta2
      blockOwnerDeletion: false
      controller: false
      kind: Kafka
      name: my-cluster
      uid: e2ce24c1-d5fe-42f9-afc7-787330ebdac6
    resourceVersion: "261662"
    uid: fbd26b39-28f0-4a35-8348-cdf2b0e14290
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-ctrlplane
      port: 9090
      protocol: TCP
      targetPort: 9090
    - name: tcp-replication
      port: 9091
      protocol: TCP
      targetPort: 9091
    - name: tcp-clients
      port: 9092
      protocol: TCP
      targetPort: 9092
    - name: tcp-clientstls
      port: 9093
      protocol: TCP
      targetPort: 9093
    publishNotReadyAddresses: true
    selector:
      strimzi.io/cluster: my-cluster
      strimzi.io/kind: Kafka
      strimzi.io/name: my-cluster-kafka
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2023-01-25T03:56:59Z"
    labels:
      app: eclipse-mosquitto-app
      app.kubernetes.io/instance: my-cluster
      app.kubernetes.io/managed-by: strimzi-cluster-operator
      app.kubernetes.io/name: zookeeper
      app.kubernetes.io/part-of: strimzi-my-cluster
      strimzi.io/cluster: my-cluster
      strimzi.io/kind: Kafka
      strimzi.io/name: my-cluster-zookeeper-client
    name: my-cluster-zookeeper-client
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: kafka.strimzi.io/v1beta2
      blockOwnerDeletion: false
      controller: false
      kind: Kafka
      name: my-cluster
      uid: e2ce24c1-d5fe-42f9-afc7-787330ebdac6
    resourceVersion: "261477"
    uid: f1dac742-56d0-4bc5-b3b2-3f24bb7ef9e3
  spec:
    clusterIP: 10.217.5.231
    clusterIPs:
    - 10.217.5.231
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-clients
      port: 2181
      protocol: TCP
      targetPort: 2181
    selector:
      strimzi.io/cluster: my-cluster
      strimzi.io/kind: Kafka
      strimzi.io/name: my-cluster-zookeeper
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    creationTimestamp: "2023-01-25T03:56:59Z"
    labels:
      app: eclipse-mosquitto-app
      app.kubernetes.io/instance: my-cluster
      app.kubernetes.io/managed-by: strimzi-cluster-operator
      app.kubernetes.io/name: zookeeper
      app.kubernetes.io/part-of: strimzi-my-cluster
      strimzi.io/cluster: my-cluster
      strimzi.io/kind: Kafka
      strimzi.io/name: my-cluster-zookeeper
    name: my-cluster-zookeeper-nodes
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: kafka.strimzi.io/v1beta2
      blockOwnerDeletion: false
      controller: false
      kind: Kafka
      name: my-cluster
      uid: e2ce24c1-d5fe-42f9-afc7-787330ebdac6
    resourceVersion: "261480"
    uid: a13e4ed8-7517-4e37-940d-f15538ac1b4d
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-clients
      port: 2181
      protocol: TCP
      targetPort: 2181
    - name: tcp-clustering
      port: 2888
      protocol: TCP
      targetPort: 2888
    - name: tcp-election
      port: 3888
      protocol: TCP
      targetPort: 3888
    publishNotReadyAddresses: true
    selector:
      strimzi.io/cluster: my-cluster
      strimzi.io/kind: Kafka
      strimzi.io/name: my-cluster-zookeeper
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"my-cluster-entity-operator"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-25T04:11:45Z"
    labels:
      app: nodejs-kafka
      app.kubernetes.io/component: nodejs-kafka
      app.kubernetes.io/instance: nodejs-kafka
      app.kubernetes.io/name: nodejs-kafka
      app.kubernetes.io/part-of: eclipse-mosquitto-app
      app.openshift.io/runtime-version: v26
    name: nodejs-kafka
    namespace: digitalhealth-edge
    resourceVersion: "322597"
    uid: d48a6c77-c112-4ddc-b7b6-20542a18b653
  spec:
    clusterIP: 10.217.4.181
    clusterIPs:
    - 10.217.4.181
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: 3000-tcp
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: nodejs-kafka
      deployment: nodejs-kafka
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mqtt-python"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-24T03:00:01Z"
    labels:
      app: patient-vitals-api
      app.kubernetes.io/component: patient-vitals-api
      app.kubernetes.io/instance: patient-vitals-api
      app.kubernetes.io/name: patient-vitals-api
      app.kubernetes.io/part-of: eclipse-mosquitto-app
      app.openshift.io/runtime-version: v11
    name: patient-vitals-api
    namespace: digitalhealth-edge
    resourceVersion: "264254"
    uid: 9ed1bf8e-3497-427d-a5f7-dfcc6ce081f0
  spec:
    clusterIP: 10.217.5.14
    clusterIPs:
    - 10.217.5.14
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: 3000-tcp
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: patient-vitals-api
      deployment: patient-vitals-api
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
    creationTimestamp: "2023-01-24T02:22:21Z"
    labels:
      template: postgresql-persistent-template
      template.openshift.io/template-instance-owner: 50291061-0b46-4711-a488-cb2ef656fef6
    name: postgresql
    namespace: digitalhealth-edge
    resourceVersion: "172215"
    uid: e82f0af7-d8aa-4d98-8302-93b2d2e2735c
  spec:
    clusterIP: 10.217.4.246
    clusterIPs:
    - 10.217.4.246
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"my-cluster-entity-operator"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-30T02:32:31Z"
    labels:
      app: py-kafka
      app.kubernetes.io/component: py-kafka
      app.kubernetes.io/instance: py-kafka
      app.kubernetes.io/name: py-kafka
      app.kubernetes.io/part-of: eclipse-mosquitto-app
      app.openshift.io/runtime-version: v31
    name: py-kafka
    namespace: digitalhealth-edge
    resourceVersion: "333561"
    uid: 18c00fec-3e92-402b-92e2-ba02fe8ac813
  spec:
    clusterIP: 10.217.5.78
    clusterIPs:
    - 10.217.5.78
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: py-kafka
      deployment: py-kafka
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"data-access-api"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-30T04:36:36Z"
    labels:
      app: react-frontend
      app.kubernetes.io/component: react-frontend
      app.kubernetes.io/instance: react-frontend
      app.kubernetes.io/name: react-frontend
      app.kubernetes.io/part-of: eclipse-mosquitto-app
      app.openshift.io/runtime-version: v2
    name: react-frontend
    namespace: digitalhealth-edge
    resourceVersion: "432332"
    uid: 190ae096-6621-4beb-bb51-55d8addea6e9
  spec:
    clusterIP: 10.217.5.232
    clusterIPs:
    - 10.217.5.232
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: 3000-tcp
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: react-frontend
      deployment: react-frontend
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mongo"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/revision: "16"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"data-access-api:v1997","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"data-access-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-30T03:24:52Z"
    generation: 19
    labels:
      app: data-access-api
      app.kubernetes.io/component: data-access-api
      app.kubernetes.io/instance: data-access-api
      app.kubernetes.io/name: data-access-api
      app.kubernetes.io/part-of: eclipse-mosquitto-app
      app.openshift.io/runtime: nodejs
    name: data-access-api
    namespace: digitalhealth-edge
    resourceVersion: "451767"
    uid: 2ad3a3e2-d7d7-41c4-9899-84b448157a81
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: data-access-api
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: data-access-api
          app.kubernetes.io/component: data-access-api
          app.kubernetes.io/name: data-access-api
          deployment: data-access-api
      spec:
        containers:
        - env:
          - name: DATABASE_URL
            value: mongodb://username:password@mongo:27017
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-access-api@sha256:c73ed5a9b0c38b16223bf114a73f129957d104751407ac01d2e6b2236f817f8a
          imagePullPolicy: IfNotPresent
          name: data-access-api
          ports:
          - containerPort: 3005
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-01-30T11:28:40Z"
      lastUpdateTime: "2023-01-30T11:28:40Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-01-30T03:24:52Z"
      lastUpdateTime: "2023-02-15T04:52:55Z"
      message: ReplicaSet "data-access-api-7b585d8684" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 19
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"patient-vitals-api"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/revision: "15"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"data-generator:v2","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"data-generator\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-24T03:02:12Z"
    generation: 42
    labels:
      app: data-generator
      app.kubernetes.io/component: data-generator
      app.kubernetes.io/instance: data-generator
      app.kubernetes.io/name: data-generator
      app.openshift.io/runtime: nodejs
    name: data-generator
    namespace: digitalhealth-edge
    resourceVersion: "367779"
    uid: 4e2e25a4-2e30-4a63-84ab-e1d5f4de2037
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: data-generator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: data-generator
          app.kubernetes.io/component: data-generator
          app.kubernetes.io/name: data-generator
          deployment: data-generator
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: http://patient-vitals-api-digitalhealth-edge.apps-crc.testing
          - name: TIMEOUTTIME
            value: "100"
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-generator@sha256:4ce36f2d5195a253aefc4d824e73ab321e124fc72520d829c910b16382ce1e9b
          imagePullPolicy: IfNotPresent
          name: data-generator
          ports:
          - containerPort: 3002
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-01-30T11:28:27Z"
      lastUpdateTime: "2023-01-30T11:28:27Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-01-24T03:02:12Z"
      lastUpdateTime: "2023-01-30T11:29:48Z"
      message: ReplicaSet "data-generator-5778898fdd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 42
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"my-cluster-entity-operator"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"kafdrop:latest","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"kafdrop\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-02-15T02:23:55Z"
    generation: 2
    labels:
      app: kafdrop
      app.kubernetes.io/component: kafdrop
      app.kubernetes.io/instance: kafdrop
      app.kubernetes.io/name: kafdrop
      app.openshift.io/runtime-namespace: digitalhealth-edge
    name: kafdrop
    namespace: digitalhealth-edge
    resourceVersion: "453828"
    uid: 790777be-d533-405f-88dc-bf8c0c6beff9
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: kafdrop
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: kafdrop
          deployment: kafdrop
      spec:
        containers:
        - env:
          - name: KAFKA_BROKERCONNECT
            value: my-cluster-kafka-brokers:9092
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/kafdrop@sha256:5337c9e0e2dee204bdde53e90cf97001f44fb9e8c3380340436efa844901a3f4
          imagePullPolicy: Always
          name: kafdrop
          ports:
          - containerPort: 9000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-02-15T02:23:55Z"
      lastUpdateTime: "2023-02-15T02:24:26Z"
      message: ReplicaSet "kafdrop-6f57cc44b7" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-02-15T23:16:31Z"
      lastUpdateTime: "2023-02-15T23:16:31Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"mongo:latest","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"mongo\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-25T11:05:16Z"
    generation: 9
    labels:
      app: mongo
      app.kubernetes.io/component: mongo
      app.kubernetes.io/instance: mongo
      app.kubernetes.io/name: mongo
      app.kubernetes.io/part-of: eclipse-mosquitto-app
      app.openshift.io/runtime: mongodb
      app.openshift.io/runtime-namespace: digitalhealth-edge
    name: mongo
    namespace: digitalhealth-edge
    resourceVersion: "453840"
    uid: 3f26c7e4-18e0-4f9a-b45d-0a5fe3dbf892
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: mongo
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: mongo
          deployment: mongo
      spec:
        containers:
        - env:
          - name: MONGO_INITDB_ROOT_USERNAME
            value: username
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: password
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/mongo@sha256:695e5eb141aa8516bd4857ee987d65401a424d0e5f8e0244ab89f6da981ddf65
          imagePullPolicy: Always
          name: mongo
          ports:
          - containerPort: 27017
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data/configdb
            name: mongo-1
          - mountPath: /data/db
            name: mongo-2
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: mongo-1
        - emptyDir: {}
          name: mongo-2
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-01-25T11:05:16Z"
      lastUpdateTime: "2023-01-25T11:05:48Z"
      message: ReplicaSet "mongo-6bfcf775fd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-02-15T23:16:31Z"
      lastUpdateTime: "2023-02-15T23:16:31Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 9
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-01-25T03:57:48Z"
    generation: 5
    labels:
      app: eclipse-mosquitto-app
      app.kubernetes.io/instance: my-cluster
      app.kubernetes.io/managed-by: strimzi-cluster-operator
      app.kubernetes.io/name: entity-operator
      app.kubernetes.io/part-of: strimzi-my-cluster
      strimzi.io/cluster: my-cluster
      strimzi.io/kind: Kafka
      strimzi.io/name: my-cluster-entity-operator
    name: my-cluster-entity-operator
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: kafka.strimzi.io/v1beta2
      blockOwnerDeletion: false
      controller: false
      kind: Kafka
      name: my-cluster
      uid: e2ce24c1-d5fe-42f9-afc7-787330ebdac6
    resourceVersion: "454241"
    uid: ac04b234-bf9f-4cbf-8aa1-9ad43a51e13e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        strimzi.io/cluster: my-cluster
        strimzi.io/kind: Kafka
        strimzi.io/name: my-cluster-entity-operator
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          strimzi.io/cluster-ca-cert-generation: "0"
        creationTimestamp: null
        labels:
          app: eclipse-mosquitto-app
          app.kubernetes.io/instance: my-cluster
          app.kubernetes.io/managed-by: strimzi-cluster-operator
          app.kubernetes.io/name: entity-operator
          app.kubernetes.io/part-of: strimzi-my-cluster
          com.company: Red_Hat
          rht.comp: AMQ_Streams
          rht.comp_ver: "2.3"
          rht.prod_name: Red_Hat_Application_Foundations
          rht.prod_ver: 2023.Q1
          rht.subcomp: entity-operator
          rht.subcomp_t: infrastructure
          strimzi.io/cluster: my-cluster
          strimzi.io/kind: Kafka
          strimzi.io/name: my-cluster-entity-operator
      spec:
        containers:
        - args:
          - /opt/strimzi/bin/topic_operator_run.sh
          env:
          - name: STRIMZI_RESOURCE_LABELS
            value: strimzi.io/cluster=my-cluster
          - name: STRIMZI_KAFKA_BOOTSTRAP_SERVERS
            value: my-cluster-kafka-bootstrap:9091
          - name: STRIMZI_ZOOKEEPER_CONNECT
            value: localhost:2181
          - name: STRIMZI_NAMESPACE
            value: digitalhealth-edge
          - name: STRIMZI_FULL_RECONCILIATION_INTERVAL_MS
            value: "120000"
          - name: STRIMZI_ZOOKEEPER_SESSION_TIMEOUT_MS
            value: "18000"
          - name: STRIMZI_TOPIC_METADATA_MAX_ATTEMPTS
            value: "6"
          - name: STRIMZI_SECURITY_PROTOCOL
            value: SSL
          - name: STRIMZI_TLS_ENABLED
            value: "true"
          - name: STRIMZI_GC_LOG_ENABLED
            value: "false"
          image: registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:943e5c7a28c8ee63302d7813950793477b2ba026106c48829ff9f083e8d5132b
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthy
              port: healthcheck
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: topic-operator
          ports:
          - containerPort: 8080
            name: healthcheck
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: healthcheck
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /healthy
              port: healthcheck
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: strimzi-to-tmp
          - mountPath: /opt/topic-operator/custom-config/
            name: entity-topic-operator-metrics-and-logging
          - mountPath: /etc/eto-certs/
            name: eto-certs
          - mountPath: /etc/tls-sidecar/cluster-ca-certs/
            name: cluster-ca-certs
        - args:
          - /opt/strimzi/bin/user_operator_run.sh
          env:
          - name: STRIMZI_KAFKA_BOOTSTRAP_SERVERS
            value: my-cluster-kafka-bootstrap:9091
          - name: STRIMZI_NAMESPACE
            value: digitalhealth-edge
          - name: STRIMZI_LABELS
            value: strimzi.io/cluster=my-cluster
          - name: STRIMZI_FULL_RECONCILIATION_INTERVAL_MS
            value: "120000"
          - name: STRIMZI_CA_KEY_NAME
            value: my-cluster-clients-ca
          - name: STRIMZI_CA_CERT_NAME
            value: my-cluster-clients-ca-cert
          - name: STRIMZI_CA_NAMESPACE
            value: digitalhealth-edge
          - name: STRIMZI_CA_VALIDITY
            value: "365"
          - name: STRIMZI_CA_RENEWAL
            value: "30"
          - name: STRIMZI_CLUSTER_CA_CERT_SECRET_NAME
            value: my-cluster-cluster-ca-cert
          - name: STRIMZI_EO_KEY_SECRET_NAME
            value: my-cluster-entity-user-operator-certs
          - name: STRIMZI_GC_LOG_ENABLED
            value: "false"
          - name: STRIMZI_SECRET_PREFIX
          - name: STRIMZI_ACLS_ADMIN_API_SUPPORTED
            value: "false"
          - name: STRIMZI_KRAFT_ENABLED
            value: "false"
          image: registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:943e5c7a28c8ee63302d7813950793477b2ba026106c48829ff9f083e8d5132b
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthy
              port: healthcheck
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: user-operator
          ports:
          - containerPort: 8081
            name: healthcheck
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: healthcheck
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: strimzi-uo-tmp
          - mountPath: /opt/user-operator/custom-config/
            name: entity-user-operator-metrics-and-logging
          - mountPath: /etc/euo-certs/
            name: euo-certs
          - mountPath: /etc/tls-sidecar/cluster-ca-certs/
            name: cluster-ca-certs
        - command:
          - /opt/stunnel/entity_operator_stunnel_run.sh
          env:
          - name: TLS_SIDECAR_LOG_LEVEL
            value: notice
          - name: STRIMZI_ZOOKEEPER_CONNECT
            value: my-cluster-zookeeper-client:2181
          image: registry.redhat.io/amq7/amq-streams-kafka-33-rhel8@sha256:cfc95d049315d334ae9e8d0f2aaefa037c5c601c3dfb7dd1cfb7c1ba4039efc5
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - /opt/stunnel/entity_operator_stunnel_pre_stop.sh
          livenessProbe:
            exec:
              command:
              - /opt/stunnel/stunnel_healthcheck.sh
              - "2181"
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: tls-sidecar
          readinessProbe:
            exec:
              command:
              - /opt/stunnel/stunnel_healthcheck.sh
              - "2181"
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: strimzi-tls-sidecar-tmp
          - mountPath: /etc/eto-certs/
            name: eto-certs
          - mountPath: /etc/tls-sidecar/cluster-ca-certs/
            name: cluster-ca-certs
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: my-cluster-entity-operator
        serviceAccountName: my-cluster-entity-operator
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: my-cluster-entity-topic-operator-config
          name: entity-topic-operator-metrics-and-logging
        - emptyDir:
            medium: Memory
            sizeLimit: 5Mi
          name: strimzi-to-tmp
        - name: eto-certs
          secret:
            defaultMode: 288
            secretName: my-cluster-entity-topic-operator-certs
        - configMap:
            defaultMode: 420
            name: my-cluster-entity-user-operator-config
          name: entity-user-operator-metrics-and-logging
        - emptyDir:
            medium: Memory
            sizeLimit: 5Mi
          name: strimzi-uo-tmp
        - name: euo-certs
          secret:
            defaultMode: 288
            secretName: my-cluster-entity-user-operator-certs
        - emptyDir:
            medium: Memory
            sizeLimit: 5Mi
          name: strimzi-tls-sidecar-tmp
        - name: cluster-ca-certs
          secret:
            defaultMode: 288
            secretName: my-cluster-cluster-ca-cert
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-01-25T03:57:48Z"
      lastUpdateTime: "2023-01-25T03:58:10Z"
      message: ReplicaSet "my-cluster-entity-operator-5c65798567" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-02-15T23:17:54Z"
      lastUpdateTime: "2023-02-15T23:17:54Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mqtt-python"},{"apiVersion":"apps/v1","kind":"Deployment","name":"my-cluster-entity-operator"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/revision: "20"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"patient-vitals-api:v11","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"patient-vitals-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-24T03:00:01Z"
    generation: 40
    labels:
      app: patient-vitals-api
      app.kubernetes.io/component: patient-vitals-api
      app.kubernetes.io/instance: patient-vitals-api
      app.kubernetes.io/name: patient-vitals-api
      app.kubernetes.io/part-of: eclipse-mosquitto-app
      app.openshift.io/runtime: nodejs
    name: patient-vitals-api
    namespace: digitalhealth-edge
    resourceVersion: "367350"
    uid: de96b0b5-5c2a-4d6d-83ca-041a443a4d0a
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: patient-vitals-api
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: patient-vitals-api
          app.kubernetes.io/component: patient-vitals-api
          app.kubernetes.io/name: patient-vitals-api
          deployment: patient-vitals-api
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: my-cluster-kafka-brokers:9092
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/patient-vitals-api@sha256:8bf180231d9a3a211abc83e60bf8b10d6e75a25c4c9c3d1dc09b8209b015b361
          imagePullPolicy: IfNotPresent
          name: patient-vitals-api
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-01-24T03:00:01Z"
      lastUpdateTime: "2023-01-25T04:06:29Z"
      message: ReplicaSet "patient-vitals-api-859f896c9b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-01-30T11:28:30Z"
      lastUpdateTime: "2023-01-30T11:28:30Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 40
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"my-cluster-entity-operator"},{"apiVersion":"apps/v1","kind":"Deployment","name":"mongo"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/revision: "15"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"py-kafka:v31","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"py-kafka\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-30T02:32:31Z"
    generation: 21
    labels:
      app: py-kafka
      app.kubernetes.io/component: py-kafka
      app.kubernetes.io/instance: py-kafka
      app.kubernetes.io/name: py-kafka
      app.kubernetes.io/part-of: eclipse-mosquitto-app
      app.openshift.io/runtime: python
    name: py-kafka
    namespace: digitalhealth-edge
    resourceVersion: "453997"
    uid: 79ac876f-d44e-4bc3-9da4-56bddd54475e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: py-kafka
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: py-kafka
          app.kubernetes.io/component: py-kafka
          app.kubernetes.io/name: py-kafka
          deployment: py-kafka
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: my-cluster-kafka-brokers:9092
          - name: DATABASE_URL
            value: mongodb://username:password@mongo:27017
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/py-kafka@sha256:97c05a57aacc984d998e59ac0e78e8a0d29efec28ff2a58fe8a715683b28cfe2
          imagePullPolicy: IfNotPresent
          name: py-kafka
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-01-30T02:32:31Z"
      lastUpdateTime: "2023-01-30T03:01:37Z"
      message: ReplicaSet "py-kafka-7449f54ddb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-02-15T23:16:55Z"
      lastUpdateTime: "2023-02-15T23:16:55Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 21
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"data-access-api"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/revision: "4"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"react-frontend:v2","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"react-frontend\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-30T04:36:35Z"
    generation: 9
    labels:
      app: react-frontend
      app.kubernetes.io/component: react-frontend
      app.kubernetes.io/instance: react-frontend
      app.kubernetes.io/name: react-frontend
      app.kubernetes.io/part-of: eclipse-mosquitto-app
    name: react-frontend
    namespace: digitalhealth-edge
    resourceVersion: "432636"
    uid: 079f138a-ca78-4e0d-a6ff-814889b5030f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: react-frontend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: react-frontend
          app.kubernetes.io/component: react-frontend
          app.kubernetes.io/name: react-frontend
          deployment: react-frontend
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/react-frontend@sha256:2f3e7e93a321e5179ad29d31814ea4df5bf2048a5ded8a7f9d5ae8b67329d246
          imagePullPolicy: IfNotPresent
          name: react-frontend
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-02-15T03:30:33Z"
      lastUpdateTime: "2023-02-15T03:30:33Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-01-30T04:36:36Z"
      lastUpdateTime: "2023-02-15T03:36:44Z"
      message: ReplicaSet "react-frontend-5fd95fb496" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 9
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mongo"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "14"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"data-access-api:v1996","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"data-access-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-02-15T04:52:42Z"
    generation: 2
    labels:
      app: data-access-api
      app.kubernetes.io/component: data-access-api
      app.kubernetes.io/name: data-access-api
      deployment: data-access-api
      pod-template-hash: 55bd784f74
    name: data-access-api-55bd784f74
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: data-access-api
      uid: 2ad3a3e2-d7d7-41c4-9899-84b448157a81
    resourceVersion: "451653"
    uid: f57ac627-834b-40d1-b960-6362689ba3ae
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: data-access-api
        pod-template-hash: 55bd784f74
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: data-access-api
          app.kubernetes.io/component: data-access-api
          app.kubernetes.io/name: data-access-api
          deployment: data-access-api
          pod-template-hash: 55bd784f74
      spec:
        containers:
        - env:
          - name: DATABASE_URL
            value: mongodb://username:password@mongo:27017
          image: quay.io/adeleeuw/digitalhealth/patient-vitals-api@sha256:f4ddead856b0e37521379f396d0e61a008e868149b467307cf43a1b3592b9618
          imagePullPolicy: IfNotPresent
          name: data-access-api
          ports:
          - containerPort: 3005
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mongo"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "15"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"data-access-api:v1997","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"data-access-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-02-15T04:52:43Z"
    generation: 3
    labels:
      app: data-access-api
      app.kubernetes.io/component: data-access-api
      app.kubernetes.io/name: data-access-api
      deployment: data-access-api
      pod-template-hash: 5b59f64845
    name: data-access-api-5b59f64845
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: data-access-api
      uid: 2ad3a3e2-d7d7-41c4-9899-84b448157a81
    resourceVersion: "451689"
    uid: 529439ef-a730-497c-a982-d45fc6b1b4f5
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: data-access-api
        pod-template-hash: 5b59f64845
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: data-access-api
          app.kubernetes.io/component: data-access-api
          app.kubernetes.io/name: data-access-api
          deployment: data-access-api
          pod-template-hash: 5b59f64845
      spec:
        containers:
        - env:
          - name: DATABASE_URL
            value: mongodb://username:password@mongo:27017
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-access-api:v1997
          imagePullPolicy: IfNotPresent
          name: data-access-api
          ports:
          - containerPort: 3005
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mongo"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "10"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"data-access-api:v5","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"data-access-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-30T04:07:51Z"
    generation: 5
    labels:
      app: data-access-api
      app.kubernetes.io/component: data-access-api
      app.kubernetes.io/name: data-access-api
      deployment: data-access-api
      pod-template-hash: 5cfb5b85b7
    name: data-access-api-5cfb5b85b7
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: data-access-api
      uid: 2ad3a3e2-d7d7-41c4-9899-84b448157a81
    resourceVersion: "450642"
    uid: a7928038-ea1c-488a-b897-14cf63ac03ce
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: data-access-api
        pod-template-hash: 5cfb5b85b7
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: data-access-api
          app.kubernetes.io/component: data-access-api
          app.kubernetes.io/name: data-access-api
          deployment: data-access-api
          pod-template-hash: 5cfb5b85b7
      spec:
        containers:
        - env:
          - name: DATABASE_URL
            value: mongodb://username:password@mongo:27017
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-access-api@sha256:6cfec9021684b842abb74e6830b55a766e9e7d62c0d7d71513422b8d509e4f02
          imagePullPolicy: IfNotPresent
          name: data-access-api
          ports:
          - containerPort: 3005
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 5
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mongo"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "13"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"data-access-api:v1996","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"data-access-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-02-15T04:48:29Z"
    generation: 3
    labels:
      app: data-access-api
      app.kubernetes.io/component: data-access-api
      app.kubernetes.io/name: data-access-api
      deployment: data-access-api
      pod-template-hash: 5f85cfffdf
    name: data-access-api-5f85cfffdf
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: data-access-api
      uid: 2ad3a3e2-d7d7-41c4-9899-84b448157a81
    resourceVersion: "451766"
    uid: 790dfb65-be7d-4d9d-a057-acad1a1f7050
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: data-access-api
        pod-template-hash: 5f85cfffdf
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: data-access-api
          app.kubernetes.io/component: data-access-api
          app.kubernetes.io/name: data-access-api
          deployment: data-access-api
          pod-template-hash: 5f85cfffdf
      spec:
        containers:
        - env:
          - name: DATABASE_URL
            value: mongodb://username:password@mongo:27017
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-access-api@sha256:f4ddead856b0e37521379f396d0e61a008e868149b467307cf43a1b3592b9618
          imagePullPolicy: IfNotPresent
          name: data-access-api
          ports:
          - containerPort: 3005
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mongo"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "7"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"data-access-api:v4","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"data-access-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-30T04:02:43Z"
    generation: 3
    labels:
      app: data-access-api
      app.kubernetes.io/component: data-access-api
      app.kubernetes.io/name: data-access-api
      deployment: data-access-api
      pod-template-hash: 5f9dc8db58
    name: data-access-api-5f9dc8db58
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: data-access-api
      uid: 2ad3a3e2-d7d7-41c4-9899-84b448157a81
    resourceVersion: "348043"
    uid: 4439621b-08be-451e-af3b-8ac4778205f5
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: data-access-api
        pod-template-hash: 5f9dc8db58
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: data-access-api
          app.kubernetes.io/component: data-access-api
          app.kubernetes.io/name: data-access-api
          deployment: data-access-api
          pod-template-hash: 5f9dc8db58
      spec:
        containers:
        - env:
          - name: DATABASE_URL
            value: mongodb://username:password@mongo:27017
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-access-api@sha256:0c4566904a9477d382580527f450b72933bae7911dd219b21e81d02a9ba580e2
          imagePullPolicy: IfNotPresent
          name: data-access-api
          ports:
          - containerPort: 3005
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mongo"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "12"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"data-access-api:v1996","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"data-access-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-02-15T04:48:28Z"
    generation: 3
    labels:
      app: data-access-api
      app.kubernetes.io/component: data-access-api
      app.kubernetes.io/name: data-access-api
      deployment: data-access-api
      pod-template-hash: 68c679d446
    name: data-access-api-68c679d446
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: data-access-api
      uid: 2ad3a3e2-d7d7-41c4-9899-84b448157a81
    resourceVersion: "450541"
    uid: 20b8b3ce-4ae9-459d-a77d-85e3b9024ea7
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: data-access-api
        pod-template-hash: 68c679d446
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: data-access-api
          app.kubernetes.io/component: data-access-api
          app.kubernetes.io/name: data-access-api
          deployment: data-access-api
          pod-template-hash: 68c679d446
      spec:
        containers:
        - env:
          - name: DATABASE_URL
            value: mongodb://username:password@mongo:27017
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-access-api:v1996
          imagePullPolicy: IfNotPresent
          name: data-access-api
          ports:
          - containerPort: 3005
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mongo"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "8"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"data-access-api:v4","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"data-access-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-30T04:07:50Z"
    generation: 2
    labels:
      app: data-access-api
      app.kubernetes.io/component: data-access-api
      app.kubernetes.io/name: data-access-api
      deployment: data-access-api
      pod-template-hash: 6cf6cf5589
    name: data-access-api-6cf6cf5589
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: data-access-api
      uid: 2ad3a3e2-d7d7-41c4-9899-84b448157a81
    resourceVersion: "348064"
    uid: 529b98fb-d817-43ad-b9d3-704f334db4fd
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: data-access-api
        pod-template-hash: 6cf6cf5589
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: data-access-api
          app.kubernetes.io/component: data-access-api
          app.kubernetes.io/name: data-access-api
          deployment: data-access-api
          pod-template-hash: 6cf6cf5589
      spec:
        containers:
        - env:
          - name: DATABASE_URL
            value: mongodb://username:password@mongo:27017
          image: quay.io/adeleeuw/digitalhealth/data-access-api@sha256:0c4566904a9477d382580527f450b72933bae7911dd219b21e81d02a9ba580e2
          imagePullPolicy: IfNotPresent
          name: data-access-api
          ports:
          - containerPort: 3005
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mongo"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "16"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"data-access-api:v1997","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"data-access-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-02-15T04:52:44Z"
    generation: 2
    labels:
      app: data-access-api
      app.kubernetes.io/component: data-access-api
      app.kubernetes.io/name: data-access-api
      deployment: data-access-api
      pod-template-hash: 7b585d8684
    name: data-access-api-7b585d8684
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: data-access-api
      uid: 2ad3a3e2-d7d7-41c4-9899-84b448157a81
    resourceVersion: "451754"
    uid: 6173a1b0-ca79-46d5-a77d-b2be779defb1
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: data-access-api
        pod-template-hash: 7b585d8684
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: data-access-api
          app.kubernetes.io/component: data-access-api
          app.kubernetes.io/name: data-access-api
          deployment: data-access-api
          pod-template-hash: 7b585d8684
      spec:
        containers:
        - env:
          - name: DATABASE_URL
            value: mongodb://username:password@mongo:27017
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-access-api@sha256:c73ed5a9b0c38b16223bf114a73f129957d104751407ac01d2e6b2236f817f8a
          imagePullPolicy: IfNotPresent
          name: data-access-api
          ports:
          - containerPort: 3005
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mongo"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "9"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"data-access-api:v5","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"data-access-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-30T04:07:51Z"
    generation: 3
    labels:
      app: data-access-api
      app.kubernetes.io/component: data-access-api
      app.kubernetes.io/name: data-access-api
      deployment: data-access-api
      pod-template-hash: 7bd7bb7544
    name: data-access-api-7bd7bb7544
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: data-access-api
      uid: 2ad3a3e2-d7d7-41c4-9899-84b448157a81
    resourceVersion: "348190"
    uid: 6498f12e-0945-488f-8465-8d723231a767
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: data-access-api
        pod-template-hash: 7bd7bb7544
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: data-access-api
          app.kubernetes.io/component: data-access-api
          app.kubernetes.io/name: data-access-api
          deployment: data-access-api
          pod-template-hash: 7bd7bb7544
      spec:
        containers:
        - env:
          - name: DATABASE_URL
            value: mongodb://username:password@mongo:27017
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-access-api:v5
          imagePullPolicy: IfNotPresent
          name: data-access-api
          ports:
          - containerPort: 3005
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mongo"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "11"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"data-access-api:v5","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"data-access-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-02-15T04:48:27Z"
    generation: 2
    labels:
      app: data-access-api
      app.kubernetes.io/component: data-access-api
      app.kubernetes.io/name: data-access-api
      deployment: data-access-api
      pod-template-hash: 7d5d4bb856
    name: data-access-api-7d5d4bb856
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: data-access-api
      uid: 2ad3a3e2-d7d7-41c4-9899-84b448157a81
    resourceVersion: "450516"
    uid: 4e2387ab-42df-4d9a-834d-efe97ef5ba3d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: data-access-api
        pod-template-hash: 7d5d4bb856
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: data-access-api
          app.kubernetes.io/component: data-access-api
          app.kubernetes.io/name: data-access-api
          deployment: data-access-api
          pod-template-hash: 7d5d4bb856
      spec:
        containers:
        - env:
          - name: DATABASE_URL
            value: mongodb://username:password@mongo:27017
          image: quay.io/adeleeuw/digitalhealth/data-access-api@sha256:6cfec9021684b842abb74e6830b55a766e9e7d62c0d7d71513422b8d509e4f02
          imagePullPolicy: IfNotPresent
          name: data-access-api
          ports:
          - containerPort: 3005
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mongo"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"data-access-api:v4","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"data-access-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-30T04:02:42Z"
    generation: 3
    labels:
      app: data-access-api
      app.kubernetes.io/component: data-access-api
      app.kubernetes.io/name: data-access-api
      deployment: data-access-api
      pod-template-hash: 8496b6b855
    name: data-access-api-8496b6b855
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: data-access-api
      uid: 2ad3a3e2-d7d7-41c4-9899-84b448157a81
    resourceVersion: "346617"
    uid: 16b30428-20a7-4aa2-8adc-4cbcd71aef86
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: data-access-api
        pod-template-hash: 8496b6b855
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: data-access-api
          app.kubernetes.io/component: data-access-api
          app.kubernetes.io/name: data-access-api
          deployment: data-access-api
          pod-template-hash: 8496b6b855
      spec:
        containers:
        - env:
          - name: DATABASE_URL
            value: mongodb://username:password@mongo:27017
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-access-api:v4
          imagePullPolicy: IfNotPresent
          name: data-access-api
          ports:
          - containerPort: 3005
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"patient-vitals-api"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "10"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"data-generator:v2","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"data-generator\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-25T04:23:14Z"
    generation: 2
    labels:
      app: data-generator
      app.kubernetes.io/component: data-generator
      app.kubernetes.io/name: data-generator
      deployment: data-generator
      pod-template-hash: 5477bdd8dd
    name: data-generator-5477bdd8dd
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: data-generator
      uid: 4e2e25a4-2e30-4a63-84ab-e1d5f4de2037
    resourceVersion: "282480"
    uid: df226ed3-fd8b-4098-8df3-f8fb08c77813
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: data-generator
        pod-template-hash: 5477bdd8dd
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: data-generator
          app.kubernetes.io/component: data-generator
          app.kubernetes.io/name: data-generator
          deployment: data-generator
          pod-template-hash: 5477bdd8dd
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: http://patient-vitals-api-digitalhealth-edge.apps-crc.testing
          - name: TIMEOUTTIME
            value: "500"
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-generator@sha256:4ce36f2d5195a253aefc4d824e73ab321e124fc72520d829c910b16382ce1e9b
          imagePullPolicy: IfNotPresent
          name: data-generator
          ports:
          - containerPort: 3002
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "4"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"data-generator:v1","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"data-generator\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-24T03:11:39Z"
    generation: 3
    labels:
      app: data-generator
      app.kubernetes.io/component: data-generator
      app.kubernetes.io/name: data-generator
      deployment: data-generator
      pod-template-hash: 55b6f7ccc8
    name: data-generator-55b6f7ccc8
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: data-generator
      uid: 4e2e25a4-2e30-4a63-84ab-e1d5f4de2037
    resourceVersion: "183244"
    uid: 1ca2596c-6a0f-4864-a25b-fda91497f759
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: data-generator
        pod-template-hash: 55b6f7ccc8
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: data-generator
          app.kubernetes.io/component: data-generator
          app.kubernetes.io/name: data-generator
          deployment: data-generator
          pod-template-hash: 55b6f7ccc8
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: http://patient-vitals-api-digitalhealth-edge.apps-crc.testing/:3000
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-generator@sha256:43f4e28ea29334005fba83c68c5d22003814a2968ef57c8d683c720da2fcbfc4
          imagePullPolicy: IfNotPresent
          name: data-generator
          ports:
          - containerPort: 3002
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"patient-vitals-api"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "15"
      deployment.kubernetes.io/revision-history: 11,13
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"data-generator:v2","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"data-generator\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-25T08:13:45Z"
    generation: 13
    labels:
      app: data-generator
      app.kubernetes.io/component: data-generator
      app.kubernetes.io/name: data-generator
      deployment: data-generator
      pod-template-hash: 5778898fdd
    name: data-generator-5778898fdd
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: data-generator
      uid: 4e2e25a4-2e30-4a63-84ab-e1d5f4de2037
    resourceVersion: "367767"
    uid: 719e2905-e57b-4321-a152-4d715438ee95
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: data-generator
        pod-template-hash: 5778898fdd
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: data-generator
          app.kubernetes.io/component: data-generator
          app.kubernetes.io/name: data-generator
          deployment: data-generator
          pod-template-hash: 5778898fdd
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: http://patient-vitals-api-digitalhealth-edge.apps-crc.testing
          - name: TIMEOUTTIME
            value: "100"
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-generator@sha256:4ce36f2d5195a253aefc4d824e73ab321e124fc72520d829c910b16382ce1e9b
          imagePullPolicy: IfNotPresent
          name: data-generator
          ports:
          - containerPort: 3002
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 13
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "2"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"data-generator:v1","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"data-generator\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-24T03:04:06Z"
    generation: 3
    labels:
      app: data-generator
      app.kubernetes.io/component: data-generator
      app.kubernetes.io/name: data-generator
      deployment: data-generator
      pod-template-hash: 596f8547d8
    name: data-generator-596f8547d8
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: data-generator
      uid: 4e2e25a4-2e30-4a63-84ab-e1d5f4de2037
    resourceVersion: "181507"
    uid: acbc167b-8b7f-4654-9507-b18fae88ca72
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: data-generator
        pod-template-hash: 596f8547d8
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: data-generator
          app.kubernetes.io/component: data-generator
          app.kubernetes.io/name: data-generator
          deployment: data-generator
          pod-template-hash: 596f8547d8
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: localhost:3000
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-generator@sha256:43f4e28ea29334005fba83c68c5d22003814a2968ef57c8d683c720da2fcbfc4
          imagePullPolicy: IfNotPresent
          name: data-generator
          ports:
          - containerPort: 3002
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"patient-vitals-api"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "14"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"data-generator:v2","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"data-generator\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-30T03:44:12Z"
    generation: 4
    labels:
      app: data-generator
      app.kubernetes.io/component: data-generator
      app.kubernetes.io/name: data-generator
      deployment: data-generator
      pod-template-hash: 659bfcb986
    name: data-generator-659bfcb986
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: data-generator
      uid: 4e2e25a4-2e30-4a63-84ab-e1d5f4de2037
    resourceVersion: "367778"
    uid: 48d04f60-4600-467a-b719-cb38c892d252
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: data-generator
        pod-template-hash: 659bfcb986
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: data-generator
          app.kubernetes.io/component: data-generator
          app.kubernetes.io/name: data-generator
          deployment: data-generator
          pod-template-hash: 659bfcb986
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: http://patient-vitals-api-digitalhealth-edge.apps-crc.testing
          - name: TIMEOUTTIME
            value: "5000"
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-generator@sha256:4ce36f2d5195a253aefc4d824e73ab321e124fc72520d829c910b16382ce1e9b
          imagePullPolicy: IfNotPresent
          name: data-generator
          ports:
          - containerPort: 3002
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "3"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"data-generator:v1","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"data-generator\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-24T03:06:53Z"
    generation: 3
    labels:
      app: data-generator
      app.kubernetes.io/component: data-generator
      app.kubernetes.io/name: data-generator
      deployment: data-generator
      pod-template-hash: 66479d7b5d
    name: data-generator-66479d7b5d
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: data-generator
      uid: 4e2e25a4-2e30-4a63-84ab-e1d5f4de2037
    resourceVersion: "183026"
    uid: 3011e91c-8318-4dd1-8ac1-76da3a36e186
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: data-generator
        pod-template-hash: 66479d7b5d
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: data-generator
          app.kubernetes.io/component: data-generator
          app.kubernetes.io/name: data-generator
          deployment: data-generator
          pod-template-hash: 66479d7b5d
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: http://localhost:3000
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-generator@sha256:43f4e28ea29334005fba83c68c5d22003814a2968ef57c8d683c720da2fcbfc4
          imagePullPolicy: IfNotPresent
          name: data-generator
          ports:
          - containerPort: 3002
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"patient-vitals-api"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "12"
      deployment.kubernetes.io/revision-history: "9"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"data-generator:v2","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"data-generator\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-25T04:22:05Z"
    generation: 9
    labels:
      app: data-generator
      app.kubernetes.io/component: data-generator
      app.kubernetes.io/name: data-generator
      deployment: data-generator
      pod-template-hash: 759c69c4b
    name: data-generator-759c69c4b
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: data-generator
      uid: 4e2e25a4-2e30-4a63-84ab-e1d5f4de2037
    resourceVersion: "292491"
    uid: 9c16e08e-18f6-4071-9b0b-04410f78b723
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: data-generator
        pod-template-hash: 759c69c4b
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: data-generator
          app.kubernetes.io/component: data-generator
          app.kubernetes.io/name: data-generator
          deployment: data-generator
          pod-template-hash: 759c69c4b
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: http://patient-vitals-api-digitalhealth-edge.apps-crc.testing
          - name: TIMEOUTTIME
            value: "1000"
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-generator@sha256:4ce36f2d5195a253aefc4d824e73ab321e124fc72520d829c910b16382ce1e9b
          imagePullPolicy: IfNotPresent
          name: data-generator
          ports:
          - containerPort: 3002
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 9
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "5"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"data-generator:v1","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"data-generator\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-24T03:12:25Z"
    generation: 3
    labels:
      app: data-generator
      app.kubernetes.io/component: data-generator
      app.kubernetes.io/name: data-generator
      deployment: data-generator
      pod-template-hash: 77cfbf4899
    name: data-generator-77cfbf4899
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: data-generator
      uid: 4e2e25a4-2e30-4a63-84ab-e1d5f4de2037
    resourceVersion: "183838"
    uid: 6cc9b3ff-067a-42ba-ae26-8ae569fd0b2e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: data-generator
        pod-template-hash: 77cfbf4899
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: data-generator
          app.kubernetes.io/component: data-generator
          app.kubernetes.io/name: data-generator
          deployment: data-generator
          pod-template-hash: 77cfbf4899
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: http://patient-vitals-api-digitalhealth-edge.apps-crc.testing:3000
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-generator@sha256:43f4e28ea29334005fba83c68c5d22003814a2968ef57c8d683c720da2fcbfc4
          imagePullPolicy: IfNotPresent
          name: data-generator
          ports:
          - containerPort: 3002
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"patient-vitals-api"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"data-generator:v1","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"data-generator\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-24T03:15:00Z"
    generation: 5
    labels:
      app: data-generator
      app.kubernetes.io/component: data-generator
      app.kubernetes.io/name: data-generator
      deployment: data-generator
      pod-template-hash: 789cb44996
    name: data-generator-789cb44996
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: data-generator
      uid: 4e2e25a4-2e30-4a63-84ab-e1d5f4de2037
    resourceVersion: "269634"
    uid: d040028a-ee3f-4c8f-8774-b6ee0e070885
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: data-generator
        pod-template-hash: 789cb44996
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: data-generator
          app.kubernetes.io/component: data-generator
          app.kubernetes.io/name: data-generator
          deployment: data-generator
          pod-template-hash: 789cb44996
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: http://patient-vitals-api-digitalhealth-edge.apps-crc.testing
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-generator@sha256:43f4e28ea29334005fba83c68c5d22003814a2968ef57c8d683c720da2fcbfc4
          imagePullPolicy: IfNotPresent
          name: data-generator
          ports:
          - containerPort: 3002
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 5
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"patient-vitals-api"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "7"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"data-generator:v1","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"data-generator\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-25T04:22:03Z"
    generation: 2
    labels:
      app: data-generator
      app.kubernetes.io/component: data-generator
      app.kubernetes.io/name: data-generator
      deployment: data-generator
      pod-template-hash: 7f448cd4f9
    name: data-generator-7f448cd4f9
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: data-generator
      uid: 4e2e25a4-2e30-4a63-84ab-e1d5f4de2037
    resourceVersion: "269515"
    uid: 805fade2-dc59-4d02-bf2a-4e7d1a53f17e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: data-generator
        pod-template-hash: 7f448cd4f9
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: data-generator
          app.kubernetes.io/component: data-generator
          app.kubernetes.io/name: data-generator
          deployment: data-generator
          pod-template-hash: 7f448cd4f9
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: http://patient-vitals-api-digitalhealth-edge.apps-crc.testing
          image: quay.io/adeleeuw/digitalhealth/data-generator@sha256:43f4e28ea29334005fba83c68c5d22003814a2968ef57c8d683c720da2fcbfc4
          imagePullPolicy: IfNotPresent
          name: data-generator
          ports:
          - containerPort: 3002
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"patient-vitals-api"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "8"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"data-generator:v2","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"data-generator\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-25T04:22:04Z"
    generation: 3
    labels:
      app: data-generator
      app.kubernetes.io/component: data-generator
      app.kubernetes.io/name: data-generator
      deployment: data-generator
      pod-template-hash: bd9b6fb5b
    name: data-generator-bd9b6fb5b
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: data-generator
      uid: 4e2e25a4-2e30-4a63-84ab-e1d5f4de2037
    resourceVersion: "269549"
    uid: 9b22a63d-1113-442e-936e-e9c4216d8c47
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: data-generator
        pod-template-hash: bd9b6fb5b
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: data-generator
          app.kubernetes.io/component: data-generator
          app.kubernetes.io/name: data-generator
          deployment: data-generator
          pod-template-hash: bd9b6fb5b
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: http://patient-vitals-api-digitalhealth-edge.apps-crc.testing
          - name: TIMEOUTTIME
            value: "1000"
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-generator:v2
          imagePullPolicy: IfNotPresent
          name: data-generator
          ports:
          - containerPort: 3002
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"my-cluster-entity-operator"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"kafdrop:latest","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"kafdrop\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-02-15T02:23:55Z"
    generation: 1
    labels:
      app: kafdrop
      deployment: kafdrop
      pod-template-hash: 6f57cc44b7
    name: kafdrop-6f57cc44b7
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kafdrop
      uid: 790777be-d533-405f-88dc-bf8c0c6beff9
    resourceVersion: "453825"
    uid: 93354ec4-f34f-4a04-b79e-cb57c2e3289c
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: kafdrop
        pod-template-hash: 6f57cc44b7
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: kafdrop
          deployment: kafdrop
          pod-template-hash: 6f57cc44b7
      spec:
        containers:
        - env:
          - name: KAFKA_BROKERCONNECT
            value: my-cluster-kafka-brokers:9092
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/kafdrop@sha256:5337c9e0e2dee204bdde53e90cf97001f44fb9e8c3380340436efa844901a3f4
          imagePullPolicy: Always
          name: kafdrop
          ports:
          - containerPort: 9000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"mongo:latest","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"mongo\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-25T11:05:16Z"
    generation: 9
    labels:
      app: mongo
      deployment: mongo
      pod-template-hash: 6bfcf775fd
    name: mongo-6bfcf775fd
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mongo
      uid: 3f26c7e4-18e0-4f9a-b45d-0a5fe3dbf892
    resourceVersion: "453838"
    uid: 1b152e6d-c202-4189-9ac9-c454aa79b671
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: mongo
        pod-template-hash: 6bfcf775fd
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: mongo
          deployment: mongo
          pod-template-hash: 6bfcf775fd
      spec:
        containers:
        - env:
          - name: MONGO_INITDB_ROOT_USERNAME
            value: username
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: password
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/mongo@sha256:695e5eb141aa8516bd4857ee987d65401a424d0e5f8e0244ab89f6da981ddf65
          imagePullPolicy: Always
          name: mongo
          ports:
          - containerPort: 27017
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data/configdb
            name: mongo-1
          - mountPath: /data/db
            name: mongo-2
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: mongo-1
        - emptyDir: {}
          name: mongo-2
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 9
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-01-25T03:57:48Z"
    generation: 5
    labels:
      app: eclipse-mosquitto-app
      app.kubernetes.io/instance: my-cluster
      app.kubernetes.io/managed-by: strimzi-cluster-operator
      app.kubernetes.io/name: entity-operator
      app.kubernetes.io/part-of: strimzi-my-cluster
      com.company: Red_Hat
      pod-template-hash: 5c65798567
      rht.comp: AMQ_Streams
      rht.comp_ver: "2.3"
      rht.prod_name: Red_Hat_Application_Foundations
      rht.prod_ver: 2023.Q1
      rht.subcomp: entity-operator
      rht.subcomp_t: infrastructure
      strimzi.io/cluster: my-cluster
      strimzi.io/kind: Kafka
      strimzi.io/name: my-cluster-entity-operator
    name: my-cluster-entity-operator-5c65798567
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: my-cluster-entity-operator
      uid: ac04b234-bf9f-4cbf-8aa1-9ad43a51e13e
    resourceVersion: "454240"
    uid: 0424d77b-6f3b-448b-96e9-acc65e6ec1ce
  spec:
    replicas: 1
    selector:
      matchLabels:
        pod-template-hash: 5c65798567
        strimzi.io/cluster: my-cluster
        strimzi.io/kind: Kafka
        strimzi.io/name: my-cluster-entity-operator
    template:
      metadata:
        annotations:
          strimzi.io/cluster-ca-cert-generation: "0"
        creationTimestamp: null
        labels:
          app: eclipse-mosquitto-app
          app.kubernetes.io/instance: my-cluster
          app.kubernetes.io/managed-by: strimzi-cluster-operator
          app.kubernetes.io/name: entity-operator
          app.kubernetes.io/part-of: strimzi-my-cluster
          com.company: Red_Hat
          pod-template-hash: 5c65798567
          rht.comp: AMQ_Streams
          rht.comp_ver: "2.3"
          rht.prod_name: Red_Hat_Application_Foundations
          rht.prod_ver: 2023.Q1
          rht.subcomp: entity-operator
          rht.subcomp_t: infrastructure
          strimzi.io/cluster: my-cluster
          strimzi.io/kind: Kafka
          strimzi.io/name: my-cluster-entity-operator
      spec:
        containers:
        - args:
          - /opt/strimzi/bin/topic_operator_run.sh
          env:
          - name: STRIMZI_RESOURCE_LABELS
            value: strimzi.io/cluster=my-cluster
          - name: STRIMZI_KAFKA_BOOTSTRAP_SERVERS
            value: my-cluster-kafka-bootstrap:9091
          - name: STRIMZI_ZOOKEEPER_CONNECT
            value: localhost:2181
          - name: STRIMZI_NAMESPACE
            value: digitalhealth-edge
          - name: STRIMZI_FULL_RECONCILIATION_INTERVAL_MS
            value: "120000"
          - name: STRIMZI_ZOOKEEPER_SESSION_TIMEOUT_MS
            value: "18000"
          - name: STRIMZI_TOPIC_METADATA_MAX_ATTEMPTS
            value: "6"
          - name: STRIMZI_SECURITY_PROTOCOL
            value: SSL
          - name: STRIMZI_TLS_ENABLED
            value: "true"
          - name: STRIMZI_GC_LOG_ENABLED
            value: "false"
          image: registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:943e5c7a28c8ee63302d7813950793477b2ba026106c48829ff9f083e8d5132b
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthy
              port: healthcheck
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: topic-operator
          ports:
          - containerPort: 8080
            name: healthcheck
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: healthcheck
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /healthy
              port: healthcheck
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: strimzi-to-tmp
          - mountPath: /opt/topic-operator/custom-config/
            name: entity-topic-operator-metrics-and-logging
          - mountPath: /etc/eto-certs/
            name: eto-certs
          - mountPath: /etc/tls-sidecar/cluster-ca-certs/
            name: cluster-ca-certs
        - args:
          - /opt/strimzi/bin/user_operator_run.sh
          env:
          - name: STRIMZI_KAFKA_BOOTSTRAP_SERVERS
            value: my-cluster-kafka-bootstrap:9091
          - name: STRIMZI_NAMESPACE
            value: digitalhealth-edge
          - name: STRIMZI_LABELS
            value: strimzi.io/cluster=my-cluster
          - name: STRIMZI_FULL_RECONCILIATION_INTERVAL_MS
            value: "120000"
          - name: STRIMZI_CA_KEY_NAME
            value: my-cluster-clients-ca
          - name: STRIMZI_CA_CERT_NAME
            value: my-cluster-clients-ca-cert
          - name: STRIMZI_CA_NAMESPACE
            value: digitalhealth-edge
          - name: STRIMZI_CA_VALIDITY
            value: "365"
          - name: STRIMZI_CA_RENEWAL
            value: "30"
          - name: STRIMZI_CLUSTER_CA_CERT_SECRET_NAME
            value: my-cluster-cluster-ca-cert
          - name: STRIMZI_EO_KEY_SECRET_NAME
            value: my-cluster-entity-user-operator-certs
          - name: STRIMZI_GC_LOG_ENABLED
            value: "false"
          - name: STRIMZI_SECRET_PREFIX
          - name: STRIMZI_ACLS_ADMIN_API_SUPPORTED
            value: "false"
          - name: STRIMZI_KRAFT_ENABLED
            value: "false"
          image: registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:943e5c7a28c8ee63302d7813950793477b2ba026106c48829ff9f083e8d5132b
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthy
              port: healthcheck
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: user-operator
          ports:
          - containerPort: 8081
            name: healthcheck
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: healthcheck
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: strimzi-uo-tmp
          - mountPath: /opt/user-operator/custom-config/
            name: entity-user-operator-metrics-and-logging
          - mountPath: /etc/euo-certs/
            name: euo-certs
          - mountPath: /etc/tls-sidecar/cluster-ca-certs/
            name: cluster-ca-certs
        - command:
          - /opt/stunnel/entity_operator_stunnel_run.sh
          env:
          - name: TLS_SIDECAR_LOG_LEVEL
            value: notice
          - name: STRIMZI_ZOOKEEPER_CONNECT
            value: my-cluster-zookeeper-client:2181
          image: registry.redhat.io/amq7/amq-streams-kafka-33-rhel8@sha256:cfc95d049315d334ae9e8d0f2aaefa037c5c601c3dfb7dd1cfb7c1ba4039efc5
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - /opt/stunnel/entity_operator_stunnel_pre_stop.sh
          livenessProbe:
            exec:
              command:
              - /opt/stunnel/stunnel_healthcheck.sh
              - "2181"
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: tls-sidecar
          readinessProbe:
            exec:
              command:
              - /opt/stunnel/stunnel_healthcheck.sh
              - "2181"
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: strimzi-tls-sidecar-tmp
          - mountPath: /etc/eto-certs/
            name: eto-certs
          - mountPath: /etc/tls-sidecar/cluster-ca-certs/
            name: cluster-ca-certs
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: my-cluster-entity-operator
        serviceAccountName: my-cluster-entity-operator
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: my-cluster-entity-topic-operator-config
          name: entity-topic-operator-metrics-and-logging
        - emptyDir:
            medium: Memory
            sizeLimit: 5Mi
          name: strimzi-to-tmp
        - name: eto-certs
          secret:
            defaultMode: 288
            secretName: my-cluster-entity-topic-operator-certs
        - configMap:
            defaultMode: 420
            name: my-cluster-entity-user-operator-config
          name: entity-user-operator-metrics-and-logging
        - emptyDir:
            medium: Memory
            sizeLimit: 5Mi
          name: strimzi-uo-tmp
        - name: euo-certs
          secret:
            defaultMode: 288
            secretName: my-cluster-entity-user-operator-certs
        - emptyDir:
            medium: Memory
            sizeLimit: 5Mi
          name: strimzi-tls-sidecar-tmp
        - name: cluster-ca-certs
          secret:
            defaultMode: 288
            secretName: my-cluster-cluster-ca-cert
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mqtt-python"},{"apiVersion":"apps/v1","kind":"Deployment","name":"my-cluster-entity-operator"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "19"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"patient-vitals-api:v11","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"patient-vitals-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-25T04:06:19Z"
    generation: 1
    labels:
      app: patient-vitals-api
      app.kubernetes.io/component: patient-vitals-api
      app.kubernetes.io/name: patient-vitals-api
      deployment: patient-vitals-api
      pod-template-hash: 549d65ccc7
    name: patient-vitals-api-549d65ccc7
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: patient-vitals-api
      uid: de96b0b5-5c2a-4d6d-83ca-041a443a4d0a
    resourceVersion: "264276"
    uid: 6bae297d-00be-4fd2-813b-3e95c70b566a
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: patient-vitals-api
        pod-template-hash: 549d65ccc7
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: patient-vitals-api
          app.kubernetes.io/component: patient-vitals-api
          app.kubernetes.io/name: patient-vitals-api
          deployment: patient-vitals-api
          pod-template-hash: 549d65ccc7
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: my-cluster-kafka-brokers:9092
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/patient-vitals-api:v11
          imagePullPolicy: IfNotPresent
          name: patient-vitals-api
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 1
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mqtt-python"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "12"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"patient-vitals-api:v10","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"patient-vitals-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-25T01:08:06Z"
    generation: 3
    labels:
      app: patient-vitals-api
      app.kubernetes.io/component: patient-vitals-api
      app.kubernetes.io/name: patient-vitals-api
      deployment: patient-vitals-api
      pod-template-hash: 5b88476557
    name: patient-vitals-api-5b88476557
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: patient-vitals-api
      uid: de96b0b5-5c2a-4d6d-83ca-041a443a4d0a
    resourceVersion: "225753"
    uid: 3771275c-51bd-4c09-bf73-af17178ab0ff
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: patient-vitals-api
        pod-template-hash: 5b88476557
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: patient-vitals-api
          app.kubernetes.io/component: patient-vitals-api
          app.kubernetes.io/name: patient-vitals-api
          deployment: patient-vitals-api
          pod-template-hash: 5b88476557
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: my-cluster-kafka-brokers-digitalhealth-edge.apps-crc.testing
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/patient-vitals-api@sha256:a040ad09d0feb444c4dc56d2df21331beebb1389a73868d74b1afb91eb00a6dc
          imagePullPolicy: IfNotPresent
          name: patient-vitals-api
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mqtt-python"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "11"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"patient-vitals-api:v7","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"patient-vitals-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-25T01:08:02Z"
    generation: 2
    labels:
      app: patient-vitals-api
      app.kubernetes.io/component: patient-vitals-api
      app.kubernetes.io/name: patient-vitals-api
      deployment: patient-vitals-api
      pod-template-hash: 5d5c5fb7ff
    name: patient-vitals-api-5d5c5fb7ff
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: patient-vitals-api
      uid: de96b0b5-5c2a-4d6d-83ca-041a443a4d0a
    resourceVersion: "224783"
    uid: aac23778-b75e-4e38-a39f-4df059d21840
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: patient-vitals-api
        pod-template-hash: 5d5c5fb7ff
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: patient-vitals-api
          app.kubernetes.io/component: patient-vitals-api
          app.kubernetes.io/name: patient-vitals-api
          deployment: patient-vitals-api
          pod-template-hash: 5d5c5fb7ff
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: http://eclipse-mosquitto-digitalhealth-edge.apps-crc.testing
          image: quay.io/adeleeuw/digitalhealth/patient-vitals-api@sha256:d8277074e5f2b1b38d437023c624233a48a423fab7c141a450deab45736f68bf
          imagePullPolicy: IfNotPresent
          name: patient-vitals-api
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mqtt-python"},{"apiVersion":"apps/v1","kind":"Deployment","name":"my-cluster-entity-operator"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "17"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"patient-vitals-api:v10","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"patient-vitals-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-25T04:04:00Z"
    generation: 2
    labels:
      app: patient-vitals-api
      app.kubernetes.io/component: patient-vitals-api
      app.kubernetes.io/name: patient-vitals-api
      deployment: patient-vitals-api
      pod-template-hash: 5d6c4b76ff
    name: patient-vitals-api-5d6c4b76ff
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: patient-vitals-api
      uid: de96b0b5-5c2a-4d6d-83ca-041a443a4d0a
    resourceVersion: "264381"
    uid: cc342c67-f538-43a5-a3fd-a2e861e32268
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: patient-vitals-api
        pod-template-hash: 5d6c4b76ff
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: patient-vitals-api
          app.kubernetes.io/component: patient-vitals-api
          app.kubernetes.io/name: patient-vitals-api
          deployment: patient-vitals-api
          pod-template-hash: 5d6c4b76ff
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: my-cluster-kafka-brokers:9092
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/patient-vitals-api@sha256:a040ad09d0feb444c4dc56d2df21331beebb1389a73868d74b1afb91eb00a6dc
          imagePullPolicy: IfNotPresent
          name: patient-vitals-api
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mqtt-python"},{"apiVersion":"apps/v1","kind":"Deployment","name":"my-cluster-entity-operator"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "16"
      deployment.kubernetes.io/revision-history: "13"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"patient-vitals-api:v10","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"patient-vitals-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-25T01:11:42Z"
    generation: 8
    labels:
      app: patient-vitals-api
      app.kubernetes.io/component: patient-vitals-api
      app.kubernetes.io/name: patient-vitals-api
      deployment: patient-vitals-api
      pod-template-hash: 6ff6447fcc
    name: patient-vitals-api-6ff6447fcc
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: patient-vitals-api
      uid: de96b0b5-5c2a-4d6d-83ca-041a443a4d0a
    resourceVersion: "263632"
    uid: 743c5b23-ce7c-4dc6-a406-c02fa9e39540
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: patient-vitals-api
        pod-template-hash: 6ff6447fcc
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: patient-vitals-api
          app.kubernetes.io/component: patient-vitals-api
          app.kubernetes.io/name: patient-vitals-api
          deployment: patient-vitals-api
          pod-template-hash: 6ff6447fcc
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: my-cluster-kafka-brokers-digitalhealth-edge.apps-crc.testing:9092
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/patient-vitals-api@sha256:a040ad09d0feb444c4dc56d2df21331beebb1389a73868d74b1afb91eb00a6dc
          imagePullPolicy: IfNotPresent
          name: patient-vitals-api
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 8
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "9"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"patient-vitals-api:v7","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"patient-vitals-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-24T23:33:36Z"
    generation: 3
    labels:
      app: patient-vitals-api
      app.kubernetes.io/component: patient-vitals-api
      app.kubernetes.io/name: patient-vitals-api
      deployment: patient-vitals-api
      pod-template-hash: 759776b454
    name: patient-vitals-api-759776b454
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: patient-vitals-api
      uid: de96b0b5-5c2a-4d6d-83ca-041a443a4d0a
    resourceVersion: "202547"
    uid: 090cd9a2-1980-4b1b-bff6-4048dfd70d5f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: patient-vitals-api
        pod-template-hash: 759776b454
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: patient-vitals-api
          app.kubernetes.io/component: patient-vitals-api
          app.kubernetes.io/name: patient-vitals-api
          deployment: patient-vitals-api
          pod-template-hash: 759776b454
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: http://eclipse-mosquitto-digitalhealth-edge.apps-crc.testing
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/patient-vitals-api:v7
          imagePullPolicy: IfNotPresent
          name: patient-vitals-api
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mqtt-python"},{"apiVersion":"apps/v1","kind":"Deployment","name":"my-cluster-entity-operator"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "18"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"patient-vitals-api:v10","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"patient-vitals-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-25T04:06:18Z"
    generation: 2
    labels:
      app: patient-vitals-api
      app.kubernetes.io/component: patient-vitals-api
      app.kubernetes.io/name: patient-vitals-api
      deployment: patient-vitals-api
      pod-template-hash: 76c864fc44
    name: patient-vitals-api-76c864fc44
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: patient-vitals-api
      uid: de96b0b5-5c2a-4d6d-83ca-041a443a4d0a
    resourceVersion: "264291"
    uid: 5a6abc50-f7dc-4197-bd98-5a42aa8ef1ee
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: patient-vitals-api
        pod-template-hash: 76c864fc44
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: patient-vitals-api
          app.kubernetes.io/component: patient-vitals-api
          app.kubernetes.io/name: patient-vitals-api
          deployment: patient-vitals-api
          pod-template-hash: 76c864fc44
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: my-cluster-kafka-brokers:9092
          image: quay.io/adeleeuw/digitalhealth/patient-vitals-api@sha256:a040ad09d0feb444c4dc56d2df21331beebb1389a73868d74b1afb91eb00a6dc
          imagePullPolicy: IfNotPresent
          name: patient-vitals-api
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mqtt-python"},{"apiVersion":"apps/v1","kind":"Deployment","name":"my-cluster-entity-operator"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "14"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"patient-vitals-api:v10","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"patient-vitals-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-25T04:02:27Z"
    generation: 2
    labels:
      app: patient-vitals-api
      app.kubernetes.io/component: patient-vitals-api
      app.kubernetes.io/name: patient-vitals-api
      deployment: patient-vitals-api
      pod-template-hash: 795b55d97c
    name: patient-vitals-api-795b55d97c
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: patient-vitals-api
      uid: de96b0b5-5c2a-4d6d-83ca-041a443a4d0a
    resourceVersion: "263295"
    uid: 33080267-3d25-4f2b-8fd2-dd3dd52e1092
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: patient-vitals-api
        pod-template-hash: 795b55d97c
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: patient-vitals-api
          app.kubernetes.io/component: patient-vitals-api
          app.kubernetes.io/name: patient-vitals-api
          deployment: patient-vitals-api
          pod-template-hash: 795b55d97c
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: my-cluster-kafka-bootstrap-digitalhealth-edge.apps-crc.testing:9092
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/patient-vitals-api@sha256:a040ad09d0feb444c4dc56d2df21331beebb1389a73868d74b1afb91eb00a6dc
          imagePullPolicy: IfNotPresent
          name: patient-vitals-api
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mqtt-python"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "10"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"patient-vitals-api:v7","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"patient-vitals-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-24T23:33:36Z"
    generation: 3
    labels:
      app: patient-vitals-api
      app.kubernetes.io/component: patient-vitals-api
      app.kubernetes.io/name: patient-vitals-api
      deployment: patient-vitals-api
      pod-template-hash: 7f98968c7d
    name: patient-vitals-api-7f98968c7d
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: patient-vitals-api
      uid: de96b0b5-5c2a-4d6d-83ca-041a443a4d0a
    resourceVersion: "224861"
    uid: bf9935b6-2b26-45c7-81d3-0c7537dc06f7
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: patient-vitals-api
        pod-template-hash: 7f98968c7d
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: patient-vitals-api
          app.kubernetes.io/component: patient-vitals-api
          app.kubernetes.io/name: patient-vitals-api
          deployment: patient-vitals-api
          pod-template-hash: 7f98968c7d
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: http://eclipse-mosquitto-digitalhealth-edge.apps-crc.testing
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/patient-vitals-api@sha256:d8277074e5f2b1b38d437023c624233a48a423fab7c141a450deab45736f68bf
          imagePullPolicy: IfNotPresent
          name: patient-vitals-api
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mqtt-python"},{"apiVersion":"apps/v1","kind":"Deployment","name":"my-cluster-entity-operator"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "15"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"patient-vitals-api:v10","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"patient-vitals-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-25T04:02:56Z"
    generation: 2
    labels:
      app: patient-vitals-api
      app.kubernetes.io/component: patient-vitals-api
      app.kubernetes.io/name: patient-vitals-api
      deployment: patient-vitals-api
      pod-template-hash: 7fd47f9949
    name: patient-vitals-api-7fd47f9949
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: patient-vitals-api
      uid: de96b0b5-5c2a-4d6d-83ca-041a443a4d0a
    resourceVersion: "263451"
    uid: a2c7802f-d319-46f1-aa5d-051e72fbaea8
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: patient-vitals-api
        pod-template-hash: 7fd47f9949
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: patient-vitals-api
          app.kubernetes.io/component: patient-vitals-api
          app.kubernetes.io/name: patient-vitals-api
          deployment: patient-vitals-api
          pod-template-hash: 7fd47f9949
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: my-cluster-kafka-bootstrap-digitalhealth-edge.apps-crc.testing
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/patient-vitals-api@sha256:a040ad09d0feb444c4dc56d2df21331beebb1389a73868d74b1afb91eb00a6dc
          imagePullPolicy: IfNotPresent
          name: patient-vitals-api
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mqtt-python"},{"apiVersion":"apps/v1","kind":"Deployment","name":"my-cluster-entity-operator"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "20"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"patient-vitals-api:v11","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"patient-vitals-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-25T04:06:19Z"
    generation: 15
    labels:
      app: patient-vitals-api
      app.kubernetes.io/component: patient-vitals-api
      app.kubernetes.io/name: patient-vitals-api
      deployment: patient-vitals-api
      pod-template-hash: 859f896c9b
    name: patient-vitals-api-859f896c9b
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: patient-vitals-api
      uid: de96b0b5-5c2a-4d6d-83ca-041a443a4d0a
    resourceVersion: "367347"
    uid: 68e578f9-aa22-4d7c-9f98-ef31a48815f5
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: patient-vitals-api
        pod-template-hash: 859f896c9b
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: patient-vitals-api
          app.kubernetes.io/component: patient-vitals-api
          app.kubernetes.io/name: patient-vitals-api
          deployment: patient-vitals-api
          pod-template-hash: 859f896c9b
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: my-cluster-kafka-brokers:9092
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/patient-vitals-api@sha256:8bf180231d9a3a211abc83e60bf8b10d6e75a25c4c9c3d1dc09b8209b015b361
          imagePullPolicy: IfNotPresent
          name: patient-vitals-api
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 15
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"py-kafka:v28","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"py-kafka\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-30T02:45:44Z"
    generation: 3
    labels:
      app: py-kafka
      app.kubernetes.io/component: py-kafka
      app.kubernetes.io/name: py-kafka
      deployment: py-kafka
      pod-template-hash: 55b4cf8466
    name: py-kafka-55b4cf8466
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: py-kafka
      uid: 79ac876f-d44e-4bc3-9da4-56bddd54475e
    resourceVersion: "327107"
    uid: 5fe2d091-5d07-4ce3-84d5-649856f34cf1
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: py-kafka
        pod-template-hash: 55b4cf8466
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: py-kafka
          app.kubernetes.io/component: py-kafka
          app.kubernetes.io/name: py-kafka
          deployment: py-kafka
          pod-template-hash: 55b4cf8466
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: my-cluster-kafka-brokers:9092
          - name: DATABASE_URL
            value: mongodb://username:password@mongo:27017
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/py-kafka:v28
          imagePullPolicy: IfNotPresent
          name: py-kafka
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "11"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"py-kafka:v30","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"py-kafka\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-30T02:57:45Z"
    generation: 3
    labels:
      app: py-kafka
      app.kubernetes.io/component: py-kafka
      app.kubernetes.io/name: py-kafka
      deployment: py-kafka
      pod-template-hash: 576bf6597
    name: py-kafka-576bf6597
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: py-kafka
      uid: 79ac876f-d44e-4bc3-9da4-56bddd54475e
    resourceVersion: "330409"
    uid: 4783af75-1553-426a-a8d9-4f2b249d221d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: py-kafka
        pod-template-hash: 576bf6597
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: py-kafka
          app.kubernetes.io/component: py-kafka
          app.kubernetes.io/name: py-kafka
          deployment: py-kafka
          pod-template-hash: 576bf6597
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: my-cluster-kafka-brokers:9092
          - name: DATABASE_URL
            value: mongodb://username:password@mongo:27017
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/py-kafka:v30
          imagePullPolicy: IfNotPresent
          name: py-kafka
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "7"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"py-kafka:v28","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"py-kafka\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-30T02:54:40Z"
    generation: 2
    labels:
      app: py-kafka
      app.kubernetes.io/component: py-kafka
      app.kubernetes.io/name: py-kafka
      deployment: py-kafka
      pod-template-hash: 599cbf4d5c
    name: py-kafka-599cbf4d5c
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: py-kafka
      uid: 79ac876f-d44e-4bc3-9da4-56bddd54475e
    resourceVersion: "329414"
    uid: 452cede1-ec84-43c7-8e05-4587aa23f2e9
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: py-kafka
        pod-template-hash: 599cbf4d5c
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: py-kafka
          app.kubernetes.io/component: py-kafka
          app.kubernetes.io/name: py-kafka
          deployment: py-kafka
          pod-template-hash: 599cbf4d5c
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: my-cluster-kafka-brokers:9092
          - name: DATABASE_URL
            value: mongodb://username:password@mongo:27017
          image: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:ae0faeae65db9f47a8c80b5853e8adb8b11fc61006e17539a63a3ff434e8c831
          imagePullPolicy: IfNotPresent
          name: py-kafka
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"my-cluster-entity-operator"},{"apiVersion":"apps/v1","kind":"Deployment","name":"mongo"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "15"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"py-kafka:v31","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"py-kafka\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-30T03:01:26Z"
    generation: 6
    labels:
      app: py-kafka
      app.kubernetes.io/component: py-kafka
      app.kubernetes.io/name: py-kafka
      deployment: py-kafka
      pod-template-hash: 7449f54ddb
    name: py-kafka-7449f54ddb
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: py-kafka
      uid: 79ac876f-d44e-4bc3-9da4-56bddd54475e
    resourceVersion: "453996"
    uid: 71f229ac-f815-4fdf-a96e-40b12e373884
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: py-kafka
        pod-template-hash: 7449f54ddb
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: py-kafka
          app.kubernetes.io/component: py-kafka
          app.kubernetes.io/name: py-kafka
          deployment: py-kafka
          pod-template-hash: 7449f54ddb
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: my-cluster-kafka-brokers:9092
          - name: DATABASE_URL
            value: mongodb://username:password@mongo:27017
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/py-kafka@sha256:97c05a57aacc984d998e59ac0e78e8a0d29efec28ff2a58fe8a715683b28cfe2
          imagePullPolicy: IfNotPresent
          name: py-kafka
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 6
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "9"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"py-kafka:v29","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"py-kafka\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-30T02:54:41Z"
    generation: 3
    labels:
      app: py-kafka
      app.kubernetes.io/component: py-kafka
      app.kubernetes.io/name: py-kafka
      deployment: py-kafka
      pod-template-hash: 76fbfbc6f
    name: py-kafka-76fbfbc6f
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: py-kafka
      uid: 79ac876f-d44e-4bc3-9da4-56bddd54475e
    resourceVersion: "330381"
    uid: b9b8b4ae-3030-4737-8981-6cafd82dde16
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: py-kafka
        pod-template-hash: 76fbfbc6f
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: py-kafka
          app.kubernetes.io/component: py-kafka
          app.kubernetes.io/name: py-kafka
          deployment: py-kafka
          pod-template-hash: 76fbfbc6f
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: my-cluster-kafka-brokers:9092
          - name: DATABASE_URL
            value: mongodb://username:password@mongo:27017
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/py-kafka@sha256:95c5afe25525590dae9f514d05826e428502b16258f45430177ddf4dfa170b25
          imagePullPolicy: IfNotPresent
          name: py-kafka
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "10"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"py-kafka:v29","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"py-kafka\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-30T02:57:45Z"
    generation: 2
    labels:
      app: py-kafka
      app.kubernetes.io/component: py-kafka
      app.kubernetes.io/name: py-kafka
      deployment: py-kafka
      pod-template-hash: 78f9b96774
    name: py-kafka-78f9b96774
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: py-kafka
      uid: 79ac876f-d44e-4bc3-9da4-56bddd54475e
    resourceVersion: "330519"
    uid: a5fa2fc4-c7c3-48cc-b61d-d951614b12e9
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: py-kafka
        pod-template-hash: 78f9b96774
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: py-kafka
          app.kubernetes.io/component: py-kafka
          app.kubernetes.io/name: py-kafka
          deployment: py-kafka
          pod-template-hash: 78f9b96774
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: my-cluster-kafka-brokers:9092
          - name: DATABASE_URL
            value: mongodb://username:password@mongo:27017
          image: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:95c5afe25525590dae9f514d05826e428502b16258f45430177ddf4dfa170b25
          imagePullPolicy: IfNotPresent
          name: py-kafka
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "8"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"py-kafka:v29","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"py-kafka\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-30T02:54:40Z"
    generation: 3
    labels:
      app: py-kafka
      app.kubernetes.io/component: py-kafka
      app.kubernetes.io/name: py-kafka
      deployment: py-kafka
      pod-template-hash: 7b844b6f47
    name: py-kafka-7b844b6f47
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: py-kafka
      uid: 79ac876f-d44e-4bc3-9da4-56bddd54475e
    resourceVersion: "329513"
    uid: 2ac37968-b780-43ac-bc6a-6e46eb6632e1
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: py-kafka
        pod-template-hash: 7b844b6f47
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: py-kafka
          app.kubernetes.io/component: py-kafka
          app.kubernetes.io/name: py-kafka
          deployment: py-kafka
          pod-template-hash: 7b844b6f47
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: my-cluster-kafka-brokers:9092
          - name: DATABASE_URL
            value: mongodb://username:password@mongo:27017
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/py-kafka:v29
          imagePullPolicy: IfNotPresent
          name: py-kafka
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"py-kafka:v28","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"py-kafka\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-30T02:45:45Z"
    generation: 3
    labels:
      app: py-kafka
      app.kubernetes.io/component: py-kafka
      app.kubernetes.io/name: py-kafka
      deployment: py-kafka
      pod-template-hash: 7dc77f667d
    name: py-kafka-7dc77f667d
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: py-kafka
      uid: 79ac876f-d44e-4bc3-9da4-56bddd54475e
    resourceVersion: "329383"
    uid: acd86258-d88e-400d-9202-2cc20114dde1
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: py-kafka
        pod-template-hash: 7dc77f667d
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: py-kafka
          app.kubernetes.io/component: py-kafka
          app.kubernetes.io/name: py-kafka
          deployment: py-kafka
          pod-template-hash: 7dc77f667d
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: my-cluster-kafka-brokers:9092
          - name: DATABASE_URL
            value: mongodb://username:password@mongo:27017
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/py-kafka@sha256:ae0faeae65db9f47a8c80b5853e8adb8b11fc61006e17539a63a3ff434e8c831
          imagePullPolicy: IfNotPresent
          name: py-kafka
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "14"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"py-kafka:v31","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"py-kafka\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-30T03:01:25Z"
    generation: 3
    labels:
      app: py-kafka
      app.kubernetes.io/component: py-kafka
      app.kubernetes.io/name: py-kafka
      deployment: py-kafka
      pod-template-hash: 7f8b75844
    name: py-kafka-7f8b75844
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: py-kafka
      uid: 79ac876f-d44e-4bc3-9da4-56bddd54475e
    resourceVersion: "331464"
    uid: 44d7cff6-036f-4e03-8132-0181bb07b7f5
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: py-kafka
        pod-template-hash: 7f8b75844
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: py-kafka
          app.kubernetes.io/component: py-kafka
          app.kubernetes.io/name: py-kafka
          deployment: py-kafka
          pod-template-hash: 7f8b75844
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: my-cluster-kafka-brokers:9092
          - name: DATABASE_URL
            value: mongodb://username:password@mongo:27017
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/py-kafka:v31
          imagePullPolicy: IfNotPresent
          name: py-kafka
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "12"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"py-kafka:v30","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"py-kafka\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-30T02:57:46Z"
    generation: 3
    labels:
      app: py-kafka
      app.kubernetes.io/component: py-kafka
      app.kubernetes.io/name: py-kafka
      deployment: py-kafka
      pod-template-hash: bf5b4bbfb
    name: py-kafka-bf5b4bbfb
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: py-kafka
      uid: 79ac876f-d44e-4bc3-9da4-56bddd54475e
    resourceVersion: "331572"
    uid: 38e7d7c5-bb43-4e17-8643-689b976d8141
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: py-kafka
        pod-template-hash: bf5b4bbfb
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: py-kafka
          app.kubernetes.io/component: py-kafka
          app.kubernetes.io/name: py-kafka
          deployment: py-kafka
          pod-template-hash: bf5b4bbfb
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: my-cluster-kafka-brokers:9092
          - name: DATABASE_URL
            value: mongodb://username:password@mongo:27017
          image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/py-kafka@sha256:70982965f897cb6f7dc7c80b53bf7dae7d0e3caebedd16c987e942014d4b70a1
          imagePullPolicy: IfNotPresent
          name: py-kafka
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "13"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"py-kafka:v30","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"py-kafka\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-30T03:01:25Z"
    generation: 2
    labels:
      app: py-kafka
      app.kubernetes.io/component: py-kafka
      app.kubernetes.io/name: py-kafka
      deployment: py-kafka
      pod-template-hash: c6fdf9c4c
    name: py-kafka-c6fdf9c4c
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: py-kafka
      uid: 79ac876f-d44e-4bc3-9da4-56bddd54475e
    resourceVersion: "331436"
    uid: fcbda730-e0f0-4eea-8b4f-433eb395d762
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: py-kafka
        pod-template-hash: c6fdf9c4c
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: py-kafka
          app.kubernetes.io/component: py-kafka
          app.kubernetes.io/name: py-kafka
          deployment: py-kafka
          pod-template-hash: c6fdf9c4c
      spec:
        containers:
        - env:
          - name: HOSTURL
            value: my-cluster-kafka-brokers:9092
          - name: DATABASE_URL
            value: mongodb://username:password@mongo:27017
          image: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:70982965f897cb6f7dc7c80b53bf7dae7d0e3caebedd16c987e942014d4b70a1
          imagePullPolicy: IfNotPresent
          name: py-kafka
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"data-access-api"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"react-frontend:v1","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"react-frontend\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-02-15T03:35:55Z"
    generation: 2
    labels:
      app: react-frontend
      deployment: react-frontend
      pod-template-hash: 599c5dcb86
    name: react-frontend-599c5dcb86
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: react-frontend
      uid: 079f138a-ca78-4e0d-a6ff-814889b5030f
    resourceVersion: "432369"
    uid: 6cd89880-1aa5-40c2-b1db-4914236966cb
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: react-frontend
        pod-template-hash: 599c5dcb86
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: react-frontend
          deployment: react-frontend
          pod-template-hash: 599c5dcb86
      spec:
        containers:
        - image: quay.io/adeleeuw/digitalhealth/data-visualiser@sha256:3884330a62fa983eaaaf0495b1c79ec80d7669ec90f31433b87586eba7889f56
          imagePullPolicy: IfNotPresent
          name: react-frontend
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"data-access-api"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"react-frontend:v2","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"react-frontend\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-02-15T03:35:56Z"
    generation: 2
    labels:
      app: react-frontend
      app.kubernetes.io/component: react-frontend
      app.kubernetes.io/name: react-frontend
      deployment: react-frontend
      pod-template-hash: 5fd95fb496
    name: react-frontend-5fd95fb496
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: react-frontend
      uid: 079f138a-ca78-4e0d-a6ff-814889b5030f
    resourceVersion: "432622"
    uid: 2ff72c6c-1259-442b-bd3b-f1bee4bf10dd
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: react-frontend
        pod-template-hash: 5fd95fb496
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: react-frontend
          app.kubernetes.io/component: react-frontend
          app.kubernetes.io/name: react-frontend
          deployment: react-frontend
          pod-template-hash: 5fd95fb496
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/react-frontend@sha256:2f3e7e93a321e5179ad29d31814ea4df5bf2048a5ded8a7f9d5ae8b67329d246
          imagePullPolicy: IfNotPresent
          name: react-frontend
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"data-access-api"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"react-frontend:v1","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"react-frontend\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-01-30T04:36:36Z"
    generation: 6
    labels:
      app: react-frontend
      deployment: react-frontend
      pod-template-hash: 98694c547
    name: react-frontend-98694c547
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: react-frontend
      uid: 079f138a-ca78-4e0d-a6ff-814889b5030f
    resourceVersion: "432635"
    uid: 0b52caf5-545c-402d-b9de-144428b5084c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: react-frontend
        pod-template-hash: 98694c547
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: react-frontend
          deployment: react-frontend
          pod-template-hash: 98694c547
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/react-frontend@sha256:3884330a62fa983eaaaf0495b1c79ec80d7669ec90f31433b87586eba7889f56
          imagePullPolicy: IfNotPresent
          name: react-frontend
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 6
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"data-access-api"}]'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"react-frontend:v2","namespace":"digitalhealth-edge"},"fieldPath":"spec.template.spec.containers[?(@.name==\"react-frontend\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2023-02-15T03:35:56Z"
    generation: 3
    labels:
      app: react-frontend
      app.kubernetes.io/component: react-frontend
      app.kubernetes.io/name: react-frontend
      deployment: react-frontend
      pod-template-hash: b4d745cb7
    name: react-frontend-b4d745cb7
    namespace: digitalhealth-edge
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: react-frontend
      uid: 079f138a-ca78-4e0d-a6ff-814889b5030f
    resourceVersion: "432390"
    uid: 94863e98-0ff1-47de-846d-c041eb2d6675
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: react-frontend
        pod-template-hash: b4d745cb7
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: react-frontend
          app.kubernetes.io/component: react-frontend
          app.kubernetes.io/name: react-frontend
          deployment: react-frontend
          pod-template-hash: b4d745cb7
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/react-frontend:v2
          imagePullPolicy: IfNotPresent
          name: react-frontend
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: "2023-02-15T04:52:43Z"
    creationTimestamp: "2023-01-30T03:24:50Z"
    generation: 12
    labels:
      app: data-access-api
      app.kubernetes.io/component: data-access-api
      app.kubernetes.io/instance: data-access-api
      app.kubernetes.io/name: data-access-api
      app.kubernetes.io/part-of: eclipse-mosquitto-app
    name: data-access-api
    namespace: digitalhealth-edge
    resourceVersion: "451644"
    uid: 275f16a0-5155-434f-ad81-dd47ca99715f
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: quay.io/adeleeuw/digitalhealth/patient-vitals-api:v1997
      from:
        kind: DockerImage
        name: quay.io/adeleeuw/digitalhealth/patient-vitals-api:v1997
      generation: 12
      importPolicy: {}
      name: v1997
      referencePolicy:
        type: Local
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-access-api
    publicDockerImageRepository: default-route-openshift-image-registry.apps-crc.testing/digitalhealth-edge/data-access-api
    tags:
    - items:
      - created: "2023-01-30T03:24:51Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/data-access-api@sha256:073ebaffe0effb6bb8811a9c836eb54b76344914603d0aae102a4ea79300f730
        generation: 2
        image: sha256:073ebaffe0effb6bb8811a9c836eb54b76344914603d0aae102a4ea79300f730
      tag: v1
    - items:
      - created: "2023-02-15T04:48:29Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/patient-vitals-api@sha256:f4ddead856b0e37521379f396d0e61a008e868149b467307cf43a1b3592b9618
        generation: 10
        image: sha256:f4ddead856b0e37521379f396d0e61a008e868149b467307cf43a1b3592b9618
      tag: v1996
    - items:
      - created: "2023-02-15T04:52:43Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/patient-vitals-api@sha256:c73ed5a9b0c38b16223bf114a73f129957d104751407ac01d2e6b2236f817f8a
        generation: 12
        image: sha256:c73ed5a9b0c38b16223bf114a73f129957d104751407ac01d2e6b2236f817f8a
      tag: v1997
    - items:
      - created: "2023-01-30T03:50:03Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/data-access-api@sha256:ce69cb4cac1d370d542df4a54bdf594c420fa79709bb8a60e178c4cda4ef2b97
        generation: 4
        image: sha256:ce69cb4cac1d370d542df4a54bdf594c420fa79709bb8a60e178c4cda4ef2b97
      tag: v3
    - items:
      - created: "2023-01-30T04:02:43Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/data-access-api@sha256:0c4566904a9477d382580527f450b72933bae7911dd219b21e81d02a9ba580e2
        generation: 6
        image: sha256:0c4566904a9477d382580527f450b72933bae7911dd219b21e81d02a9ba580e2
      tag: v4
    - items:
      - created: "2023-01-30T04:07:51Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/data-access-api@sha256:6cfec9021684b842abb74e6830b55a766e9e7d62c0d7d71513422b8d509e4f02
        generation: 8
        image: sha256:6cfec9021684b842abb74e6830b55a766e9e7d62c0d7d71513422b8d509e4f02
      tag: v5
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: "2023-01-25T04:22:04Z"
    creationTimestamp: "2023-01-24T03:02:11Z"
    generation: 4
    labels:
      app: data-generator
      app.kubernetes.io/component: data-generator
      app.kubernetes.io/instance: data-generator
      app.kubernetes.io/name: data-generator
      app.kubernetes.io/part-of: eclipse-mosquitto-app
    name: data-generator
    namespace: digitalhealth-edge
    resourceVersion: "269512"
    uid: 04193783-9f67-4d90-9aba-314be3aaa8f2
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: quay.io/adeleeuw/digitalhealth/data-generator:v2
      from:
        kind: DockerImage
        name: quay.io/adeleeuw/digitalhealth/data-generator:v2
      generation: 4
      importPolicy: {}
      name: v2
      referencePolicy:
        type: Local
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/data-generator
    publicDockerImageRepository: default-route-openshift-image-registry.apps-crc.testing/digitalhealth-edge/data-generator
    tags:
    - items:
      - created: "2023-01-24T03:02:12Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/data-generator@sha256:43f4e28ea29334005fba83c68c5d22003814a2968ef57c8d683c720da2fcbfc4
        generation: 2
        image: sha256:43f4e28ea29334005fba83c68c5d22003814a2968ef57c8d683c720da2fcbfc4
      tag: v1
    - items:
      - created: "2023-01-25T04:22:04Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/data-generator@sha256:4ce36f2d5195a253aefc4d824e73ab321e124fc72520d829c910b16382ce1e9b
        generation: 4
        image: sha256:4ce36f2d5195a253aefc4d824e73ab321e124fc72520d829c910b16382ce1e9b
      tag: v2
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: "2023-01-24T04:13:04Z"
    creationTimestamp: "2023-01-24T02:14:39Z"
    generation: 4
    labels:
      app: eclipse-mosquitto
      app.kubernetes.io/component: eclipse-mosquitto
      app.kubernetes.io/instance: eclipse-mosquitto
      app.kubernetes.io/name: eclipse-mosquitto
      app.kubernetes.io/part-of: eclipse-mosquitto-app
    name: eclipse-mosquitto
    namespace: digitalhealth-edge
    resourceVersion: "197393"
    uid: 9a773af7-c6c5-4e71-9d6f-468a97fc340d
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: eclipse-mosquitto:1.6.15
      from:
        kind: DockerImage
        name: eclipse-mosquitto:1.6.15
      generation: 4
      importPolicy: {}
      name: 1.6.15
      referencePolicy:
        type: Local
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/eclipse-mosquitto
    publicDockerImageRepository: default-route-openshift-image-registry.apps-crc.testing/digitalhealth-edge/eclipse-mosquitto
    tags:
    - items:
      - created: "2023-01-24T04:13:04Z"
        dockerImageReference: eclipse-mosquitto@sha256:09ab26ec97b7904cf2bd433ea2bfa9b1fb6da1bfbdc389734e91cf2739684285
        generation: 4
        image: sha256:09ab26ec97b7904cf2bd433ea2bfa9b1fb6da1bfbdc389734e91cf2739684285
      tag: 1.6.15
    - items:
      - created: "2023-01-24T02:14:42Z"
        dockerImageReference: docker.io/eclipse-mosquitto@sha256:342ca8c3d787fef053b7ec1fd60cf1414cbd7504c98b7b709660f60206623f41
        generation: 2
        image: sha256:342ca8c3d787fef053b7ec1fd60cf1414cbd7504c98b7b709660f60206623f41
      tag: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: "2023-02-15T02:23:55Z"
    creationTimestamp: "2023-02-15T02:23:52Z"
    generation: 2
    labels:
      app: kafdrop
      app.kubernetes.io/component: kafdrop
      app.kubernetes.io/instance: kafdrop
      app.kubernetes.io/name: kafdrop
      app.kubernetes.io/part-of: eclipse-mosquitto-app
    name: kafdrop
    namespace: digitalhealth-edge
    resourceVersion: "414449"
    uid: 89206f09-3289-402d-8d07-f709bd6efc25
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: obsidiandynamics/kafdrop
      from:
        kind: DockerImage
        name: obsidiandynamics/kafdrop
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Local
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/kafdrop
    publicDockerImageRepository: default-route-openshift-image-registry.apps-crc.testing/digitalhealth-edge/kafdrop
    tags:
    - items:
      - created: "2023-02-15T02:23:55Z"
        dockerImageReference: obsidiandynamics/kafdrop@sha256:5337c9e0e2dee204bdde53e90cf97001f44fb9e8c3380340436efa844901a3f4
        generation: 2
        image: sha256:5337c9e0e2dee204bdde53e90cf97001f44fb9e8c3380340436efa844901a3f4
      tag: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: "2023-01-25T03:44:25Z"
    creationTimestamp: "2023-01-25T03:44:22Z"
    generation: 2
    labels:
      app: kafka
      app.kubernetes.io/component: kafka
      app.kubernetes.io/instance: kafka
      app.kubernetes.io/name: kafka
      app.kubernetes.io/part-of: eclipse-mosquitto-app
    name: kafka
    namespace: digitalhealth-edge
    resourceVersion: "256696"
    uid: 1a2a6399-5608-410d-8fd5-cb8f99774464
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: bitnami/kafka
      from:
        kind: DockerImage
        name: bitnami/kafka
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Local
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/kafka
    publicDockerImageRepository: default-route-openshift-image-registry.apps-crc.testing/digitalhealth-edge/kafka
    tags:
    - items:
      - created: "2023-01-25T03:44:25Z"
        dockerImageReference: bitnami/kafka@sha256:a2cf07200bcc82b8ded147b63574b42072cfce3638d6e755f31d4a8a1b309982
        generation: 2
        image: sha256:a2cf07200bcc82b8ded147b63574b42072cfce3638d6e755f31d4a8a1b309982
      tag: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: "2023-01-25T11:05:15Z"
    creationTimestamp: "2023-01-25T11:05:13Z"
    generation: 2
    labels:
      app: mongo
      app.kubernetes.io/component: mongo
      app.kubernetes.io/instance: mongo
      app.kubernetes.io/name: mongo
      app.kubernetes.io/part-of: eclipse-mosquitto-app
    name: mongo
    namespace: digitalhealth-edge
    resourceVersion: "299293"
    uid: 11f5c6c1-d9f2-4272-9263-df9952f353a4
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: mongo
      from:
        kind: DockerImage
        name: mongo
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Local
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/mongo
    publicDockerImageRepository: default-route-openshift-image-registry.apps-crc.testing/digitalhealth-edge/mongo
    tags:
    - items:
      - created: "2023-01-25T11:05:15Z"
        dockerImageReference: mongo@sha256:695e5eb141aa8516bd4857ee987d65401a424d0e5f8e0244ab89f6da981ddf65
        generation: 2
        image: sha256:695e5eb141aa8516bd4857ee987d65401a424d0e5f8e0244ab89f6da981ddf65
      tag: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: "2023-01-24T02:58:19Z"
    creationTimestamp: "2023-01-24T02:58:18Z"
    generation: 2
    labels:
      app: mqtt-consumer
      app.kubernetes.io/component: mqtt-consumer
      app.kubernetes.io/instance: mqtt-consumer
      app.kubernetes.io/name: mqtt-consumer
      app.kubernetes.io/part-of: eclipse-mosquitto-app
    name: mqtt-consumer
    namespace: digitalhealth-edge
    resourceVersion: "179874"
    uid: a39b08ec-830b-4b84-be00-21b3947b3379
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: quay.io/adeleeuw/digitalhealth/mqtt-consumer:v1
      from:
        kind: DockerImage
        name: quay.io/adeleeuw/digitalhealth/mqtt-consumer:v1
      generation: 2
      importPolicy: {}
      name: v1
      referencePolicy:
        type: Local
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/mqtt-consumer
    publicDockerImageRepository: default-route-openshift-image-registry.apps-crc.testing/digitalhealth-edge/mqtt-consumer
    tags:
    - items:
      - created: "2023-01-24T02:58:19Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/mqtt-consumer@sha256:2d2b291aee489fe7527cb929e9c25bad8a1a1befbae47fbcb2b0f62043c123ee
        generation: 2
        image: sha256:2d2b291aee489fe7527cb929e9c25bad8a1a1befbae47fbcb2b0f62043c123ee
      tag: v1
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: "2023-01-24T23:55:57Z"
    creationTimestamp: "2023-01-24T03:47:30Z"
    generation: 14
    labels:
      app: mqtt-python
      app.kubernetes.io/component: mqtt-python
      app.kubernetes.io/instance: mqtt-python
      app.kubernetes.io/name: mqtt-python
      app.kubernetes.io/part-of: eclipse-mosquitto-app
    name: mqtt-python
    namespace: digitalhealth-edge
    resourceVersion: "207547"
    uid: 2f40ff1c-285e-4853-af7c-964e5f6609da
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: quay.io/adeleeuw/digitalhealth/nodejsmqttconsumer:v4
      from:
        kind: DockerImage
        name: quay.io/adeleeuw/digitalhealth/nodejsmqttconsumer:v4
      generation: 14
      importPolicy: {}
      name: v4
      referencePolicy:
        type: Local
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/mqtt-python
    publicDockerImageRepository: default-route-openshift-image-registry.apps-crc.testing/digitalhealth-edge/mqtt-python
    tags:
    - items:
      - created: "2023-01-24T23:51:25Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejsmqttconsumer@sha256:1618a5bd780e6bebf7615299311a2a94494fc3d78f489917392e1dab2379a8ca
        generation: 10
        image: sha256:1618a5bd780e6bebf7615299311a2a94494fc3d78f489917392e1dab2379a8ca
      tag: v1
    - items:
      - created: "2023-01-24T03:47:31Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/mqtt-consumer@sha256:a8e5badc1852095805bd3c52e060eed026d555a3b07f59866678f6cd37511e29
        generation: 2
        image: sha256:a8e5badc1852095805bd3c52e060eed026d555a3b07f59866678f6cd37511e29
      tag: v2
    - items:
      - created: "2023-01-24T23:54:29Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejsmqttconsumer@sha256:ebeb3f655f9d97e4b6f36d4860a806a1d4b24b4a2eeead0a18e1b3d6e68270af
        generation: 12
        image: sha256:ebeb3f655f9d97e4b6f36d4860a806a1d4b24b4a2eeead0a18e1b3d6e68270af
      - created: "2023-01-24T03:50:33Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/mqtt-consumer@sha256:ee06c48be78028db0a201dc60f4e900aadf578d3b746cc9e97c79c3a3b239fb4
        generation: 4
        image: sha256:ee06c48be78028db0a201dc60f4e900aadf578d3b746cc9e97c79c3a3b239fb4
      tag: v3
    - items:
      - created: "2023-01-24T23:55:57Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejsmqttconsumer@sha256:30148e33bf55088568f79b8351590f6bfe1bdbe807b5429c3a75419d078cc80e
        generation: 14
        image: sha256:30148e33bf55088568f79b8351590f6bfe1bdbe807b5429c3a75419d078cc80e
      - created: "2023-01-24T03:59:16Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/mqtt-consumer@sha256:0c7f491ec24b08c381e161cccdf149c2177c95608755a6f7a58a1224a12dac9f
        generation: 6
        image: sha256:0c7f491ec24b08c381e161cccdf149c2177c95608755a6f7a58a1224a12dac9f
      tag: v4
    - items:
      - created: "2023-01-24T04:15:03Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/mqtt-consumer@sha256:df8ee7b43d39b7b39bcbb9abff63be2d6fe8f3435988883bf8b369ee67100577
        generation: 8
        image: sha256:df8ee7b43d39b7b39bcbb9abff63be2d6fe8f3435988883bf8b369ee67100577
      tag: v5
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: "2023-01-30T02:30:02Z"
    creationTimestamp: "2023-01-25T04:11:43Z"
    generation: 56
    labels:
      app: nodejs-kafka
      app.kubernetes.io/component: nodejs-kafka
      app.kubernetes.io/instance: nodejs-kafka
      app.kubernetes.io/name: nodejs-kafka
      app.kubernetes.io/part-of: eclipse-mosquitto-app
    name: nodejs-kafka
    namespace: digitalhealth-edge
    resourceVersion: "322644"
    uid: 039169cf-dfcf-43d8-af5a-2f1dcae2d080
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: quay.io/adeleeuw/digitalhealth/nodejs-kafka:v26
      from:
        kind: DockerImage
        name: quay.io/adeleeuw/digitalhealth/nodejs-kafka:v26
      generation: 56
      importPolicy: {}
      name: v26
      referencePolicy:
        type: Local
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/nodejs-kafka
    publicDockerImageRepository: default-route-openshift-image-registry.apps-crc.testing/digitalhealth-edge/nodejs-kafka
    tags:
    - items:
      - created: "2023-01-25T04:11:44Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:0d3dfe90c2b71765f0b10b2960b791ca38746316666f45c6c9cc99485d93898d
        generation: 24
        image: sha256:0d3dfe90c2b71765f0b10b2960b791ca38746316666f45c6c9cc99485d93898d
      tag: v1
    - items:
      - created: "2023-01-25T08:43:48Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:77cea7a30e961cbd84778fb43f27531d6dcd16246b13c21caca659e4b7a18432
        generation: 16
        image: sha256:77cea7a30e961cbd84778fb43f27531d6dcd16246b13c21caca659e4b7a18432
      tag: v10
    - items:
      - created: "2023-01-25T08:45:57Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:77cea7a30e961cbd84778fb43f27531d6dcd16246b13c21caca659e4b7a18432
        generation: 18
        image: sha256:77cea7a30e961cbd84778fb43f27531d6dcd16246b13c21caca659e4b7a18432
      tag: v11
    - items:
      - created: "2023-01-25T08:47:31Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:1b1280c5be7f7c754a33c9987908b77e13605c77e703d8adb0623c1f365399b0
        generation: 20
        image: sha256:1b1280c5be7f7c754a33c9987908b77e13605c77e703d8adb0623c1f365399b0
      tag: v12
    - items:
      - created: "2023-01-25T11:13:26Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:3b3ea84a7de9e1ff2c4d7b761f877c146031874afd5440b00eb780d4e31b5346
        generation: 22
        image: sha256:3b3ea84a7de9e1ff2c4d7b761f877c146031874afd5440b00eb780d4e31b5346
      tag: v13
    - items:
      - created: "2023-01-25T11:27:33Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:76762e1daf614639b7224b003bd0115d4cea7832b0452a4b6b1eb7b1c1967fa8
        generation: 28
        image: sha256:76762e1daf614639b7224b003bd0115d4cea7832b0452a4b6b1eb7b1c1967fa8
      tag: v14
    - items:
      - created: "2023-01-25T11:25:08Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:f61f4a44c62cdd48f9a30e86f003655d6fb3d1b370cb4352b1ad8aa143654d69
        generation: 26
        image: sha256:f61f4a44c62cdd48f9a30e86f003655d6fb3d1b370cb4352b1ad8aa143654d69
      tag: v15
    - items:
      - created: "2023-01-25T11:28:56Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:caf6ae566a0c11b8a960b71657cb7db20cee0f7e45b2c44dd77f82869c6f1b47
        generation: 30
        image: sha256:caf6ae566a0c11b8a960b71657cb7db20cee0f7e45b2c44dd77f82869c6f1b47
      tag: v16
    - items:
      - created: "2023-01-25T11:31:50Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:78f3141e3d5fbe9fdd6d62316a3961e3be08cd69e3719db135b5fb48b4547c35
        generation: 42
        image: sha256:78f3141e3d5fbe9fdd6d62316a3961e3be08cd69e3719db135b5fb48b4547c35
      tag: v17
    - items:
      - created: "2023-01-25T11:34:32Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:913b821f7c0ab788996a7cb55ceaf4cdb1afd05d62a147fcf7c9c38037134597
        generation: 40
        image: sha256:913b821f7c0ab788996a7cb55ceaf4cdb1afd05d62a147fcf7c9c38037134597
      tag: v18
    - items:
      - created: "2023-01-25T11:37:58Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:1dfd4c01a7abdd25a037056f1f2ae0a47a7db2d8d8e5eaa79981f2ae0beed918
        generation: 36
        image: sha256:1dfd4c01a7abdd25a037056f1f2ae0a47a7db2d8d8e5eaa79981f2ae0beed918
      tag: v19
    - items:
      - created: "2023-01-25T11:40:42Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:e508a60c6d4620250370487960a1263b0cf06bce34d8b27bea17ea8b22eecb8b
        generation: 38
        image: sha256:e508a60c6d4620250370487960a1263b0cf06bce34d8b27bea17ea8b22eecb8b
      tag: v20
    - items:
      - created: "2023-01-30T01:58:38Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:15d88be3a95f25d983f24524f71e95a7baa6d153ac020ccb9d1c9bcd41e519b0
        generation: 44
        image: sha256:15d88be3a95f25d983f24524f71e95a7baa6d153ac020ccb9d1c9bcd41e519b0
      tag: v21
    - items:
      - created: "2023-01-30T02:01:05Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:620f3783eb93f25c3fc1927646caa559312865d3aee5d6d43b4054d541f06237
        generation: 46
        image: sha256:620f3783eb93f25c3fc1927646caa559312865d3aee5d6d43b4054d541f06237
      tag: v22
    - items:
      - created: "2023-01-30T02:11:38Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:e0e8f223460ade89d85c406ac9176faad5dfc0c486877cf8df953d777054a9a7
        generation: 48
        image: sha256:e0e8f223460ade89d85c406ac9176faad5dfc0c486877cf8df953d777054a9a7
      tag: v23
    - items:
      - created: "2023-01-30T02:14:37Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:1d42e087c47e8eccbbc868ec45c3b9460880b1dc3a9dd63b59e005aa57bf65cb
        generation: 54
        image: sha256:1d42e087c47e8eccbbc868ec45c3b9460880b1dc3a9dd63b59e005aa57bf65cb
      tag: v24
    - items:
      - created: "2023-01-30T02:16:57Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:1ed1929121ff598ee020dccc39955411db0836edad6144e7ba568751e967256d
        generation: 52
        image: sha256:1ed1929121ff598ee020dccc39955411db0836edad6144e7ba568751e967256d
      tag: v25
    - items:
      - created: "2023-01-30T02:30:02Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:5071276e3b08ab269b56d8db3e066dd6b4ae97f5e9f75124459409927921c35c
        generation: 56
        image: sha256:5071276e3b08ab269b56d8db3e066dd6b4ae97f5e9f75124459409927921c35c
      tag: v26
    - items:
      - created: "2023-01-25T04:39:51Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:a2eee6457c2edd9b97cb1eb38a5a631eb5d3b2d8d64b4870f922ad92cbbf0fcb
        generation: 4
        image: sha256:a2eee6457c2edd9b97cb1eb38a5a631eb5d3b2d8d64b4870f922ad92cbbf0fcb
      tag: v3
    - items:
      - created: "2023-01-25T04:43:48Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:ae2f1f08784077aaa0a9ba1a36a8412f7fad4b983273f4c3cd553f1859706751
        generation: 6
        image: sha256:ae2f1f08784077aaa0a9ba1a36a8412f7fad4b983273f4c3cd553f1859706751
      tag: v4
    - items:
      - created: "2023-01-25T08:16:49Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:ba0707a8e3697bd922a110cffc7983d4009b264c38d5da2b67f08e6ba38ee589
        generation: 8
        image: sha256:ba0707a8e3697bd922a110cffc7983d4009b264c38d5da2b67f08e6ba38ee589
      tag: v5
    - items:
      - created: "2023-01-25T08:26:06Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:b65e4dac280bdc3c320b68de3a5b1def271fb8d540cacab671f0ed06dcce6a79
        generation: 10
        image: sha256:b65e4dac280bdc3c320b68de3a5b1def271fb8d540cacab671f0ed06dcce6a79
      tag: v6
    - items:
      - created: "2023-01-25T08:30:01Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:ea215b6dcc2ddcac35b37c783012c04503fccb72127260a2544d63be588e86ed
        generation: 12
        image: sha256:ea215b6dcc2ddcac35b37c783012c04503fccb72127260a2544d63be588e86ed
      tag: v8
    - items:
      - created: "2023-01-25T08:34:53Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:5e419ae498f230de728c5d654812c189c0181f4e25c7cdccab52e5b4256e670d
        generation: 14
        image: sha256:5e419ae498f230de728c5d654812c189c0181f4e25c7cdccab52e5b4256e670d
      tag: v9
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: "2023-01-25T04:06:19Z"
    creationTimestamp: "2023-01-24T03:00:00Z"
    generation: 14
    labels:
      app: patient-vitals-api
      app.kubernetes.io/component: patient-vitals-api
      app.kubernetes.io/instance: patient-vitals-api
      app.kubernetes.io/name: patient-vitals-api
      app.kubernetes.io/part-of: eclipse-mosquitto-app
    name: patient-vitals-api
    namespace: digitalhealth-edge
    resourceVersion: "264279"
    uid: b002fef0-06ee-4013-837c-f21f7c72170c
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: quay.io/adeleeuw/digitalhealth/patient-vitals-api:v11
      from:
        kind: DockerImage
        name: quay.io/adeleeuw/digitalhealth/patient-vitals-api:v11
      generation: 14
      importPolicy: {}
      name: v11
      referencePolicy:
        type: Local
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/patient-vitals-api
    publicDockerImageRepository: default-route-openshift-image-registry.apps-crc.testing/digitalhealth-edge/patient-vitals-api
    tags:
    - items:
      - created: "2023-01-24T03:00:01Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/patient-vitals-api@sha256:229b55d7a5a0687d403436f9cb95c2b51873a3ead7b39f619993940d9850ef08
        generation: 2
        image: sha256:229b55d7a5a0687d403436f9cb95c2b51873a3ead7b39f619993940d9850ef08
      tag: v1
    - items:
      - created: "2023-01-25T01:08:04Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/patient-vitals-api@sha256:a040ad09d0feb444c4dc56d2df21331beebb1389a73868d74b1afb91eb00a6dc
        generation: 12
        image: sha256:a040ad09d0feb444c4dc56d2df21331beebb1389a73868d74b1afb91eb00a6dc
      tag: v10
    - items:
      - created: "2023-01-25T04:06:19Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/patient-vitals-api@sha256:8bf180231d9a3a211abc83e60bf8b10d6e75a25c4c9c3d1dc09b8209b015b361
        generation: 14
        image: sha256:8bf180231d9a3a211abc83e60bf8b10d6e75a25c4c9c3d1dc09b8209b015b361
      tag: v11
    - items:
      - created: "2023-01-24T03:21:30Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/patient-vitals-api@sha256:6ea60a05271358ecb1ea723a3af0b03075811a1938eacc3300c65de2c1355602
        generation: 4
        image: sha256:6ea60a05271358ecb1ea723a3af0b03075811a1938eacc3300c65de2c1355602
      tag: v2
    - items:
      - created: "2023-01-24T03:23:03Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/patient-vitals-api@sha256:914342340fe72069ea8f5004c31903b15c368c6cfa26d55c9631e3fd7e252a41
        generation: 6
        image: sha256:914342340fe72069ea8f5004c31903b15c368c6cfa26d55c9631e3fd7e252a41
      tag: v3
    - items:
      - created: "2023-01-24T23:31:11Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/patient-vitals-api@sha256:a3437981163c164e3ad4eeff2d00f95e9b5bdd32fe4f6d4dfa690289d42a855c
        generation: 8
        image: sha256:a3437981163c164e3ad4eeff2d00f95e9b5bdd32fe4f6d4dfa690289d42a855c
      tag: v6
    - items:
      - created: "2023-01-24T23:33:36Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/patient-vitals-api@sha256:d8277074e5f2b1b38d437023c624233a48a423fab7c141a450deab45736f68bf
        generation: 10
        image: sha256:d8277074e5f2b1b38d437023c624233a48a423fab7c141a450deab45736f68bf
      tag: v7
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: "2023-01-30T03:01:26Z"
    creationTimestamp: "2023-01-30T02:32:29Z"
    generation: 12
    labels:
      app: py-kafka
      app.kubernetes.io/component: py-kafka
      app.kubernetes.io/instance: py-kafka
      app.kubernetes.io/name: py-kafka
      app.kubernetes.io/part-of: eclipse-mosquitto-app
    name: py-kafka
    namespace: digitalhealth-edge
    resourceVersion: "331451"
    uid: ecc5aa37-ea8f-4964-8887-3be65c4b2166
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: quay.io/adeleeuw/digitalhealth/nodejs-kafka:v31
      from:
        kind: DockerImage
        name: quay.io/adeleeuw/digitalhealth/nodejs-kafka:v31
      generation: 12
      importPolicy: {}
      name: v31
      referencePolicy:
        type: Local
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/py-kafka
    publicDockerImageRepository: default-route-openshift-image-registry.apps-crc.testing/digitalhealth-edge/py-kafka
    tags:
    - items:
      - created: "2023-01-30T02:32:31Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:5071276e3b08ab269b56d8db3e066dd6b4ae97f5e9f75124459409927921c35c
        generation: 2
        image: sha256:5071276e3b08ab269b56d8db3e066dd6b4ae97f5e9f75124459409927921c35c
      tag: v26
    - items:
      - created: "2023-01-30T02:40:42Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:f6250ba560834224dd2eedea789ef907da2b9c9a795ed83d8d19e6357423c3c5
        generation: 4
        image: sha256:f6250ba560834224dd2eedea789ef907da2b9c9a795ed83d8d19e6357423c3c5
      tag: v27
    - items:
      - created: "2023-01-30T02:45:44Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:ae0faeae65db9f47a8c80b5853e8adb8b11fc61006e17539a63a3ff434e8c831
        generation: 6
        image: sha256:ae0faeae65db9f47a8c80b5853e8adb8b11fc61006e17539a63a3ff434e8c831
      tag: v28
    - items:
      - created: "2023-01-30T02:54:41Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:95c5afe25525590dae9f514d05826e428502b16258f45430177ddf4dfa170b25
        generation: 8
        image: sha256:95c5afe25525590dae9f514d05826e428502b16258f45430177ddf4dfa170b25
      tag: v29
    - items:
      - created: "2023-01-30T02:57:46Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:70982965f897cb6f7dc7c80b53bf7dae7d0e3caebedd16c987e942014d4b70a1
        generation: 10
        image: sha256:70982965f897cb6f7dc7c80b53bf7dae7d0e3caebedd16c987e942014d4b70a1
      tag: v30
    - items:
      - created: "2023-01-30T03:01:26Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/nodejs-kafka@sha256:97c05a57aacc984d998e59ac0e78e8a0d29efec28ff2a58fe8a715683b28cfe2
        generation: 12
        image: sha256:97c05a57aacc984d998e59ac0e78e8a0d29efec28ff2a58fe8a715683b28cfe2
      tag: v31
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: "2023-02-15T03:35:56Z"
    creationTimestamp: "2023-01-30T04:36:34Z"
    generation: 4
    labels:
      app: react-frontend
      app.kubernetes.io/component: react-frontend
      app.kubernetes.io/instance: react-frontend
      app.kubernetes.io/name: react-frontend
      app.kubernetes.io/part-of: eclipse-mosquitto-app
    name: react-frontend
    namespace: digitalhealth-edge
    resourceVersion: "432378"
    uid: 0cf19ed9-bff2-4c54-8889-eb3fd3cd696b
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: quay.io/adeleeuw/digitalhealth/data-visualiser:v2
      from:
        kind: DockerImage
        name: quay.io/adeleeuw/digitalhealth/data-visualiser:v2
      generation: 4
      importPolicy: {}
      name: v2
      referencePolicy:
        type: Local
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/digitalhealth-edge/react-frontend
    publicDockerImageRepository: default-route-openshift-image-registry.apps-crc.testing/digitalhealth-edge/react-frontend
    tags:
    - items:
      - created: "2023-01-30T04:36:35Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/data-visualiser@sha256:3884330a62fa983eaaaf0495b1c79ec80d7669ec90f31433b87586eba7889f56
        generation: 2
        image: sha256:3884330a62fa983eaaaf0495b1c79ec80d7669ec90f31433b87586eba7889f56
      tag: v1
    - items:
      - created: "2023-02-15T03:35:56Z"
        dockerImageReference: quay.io/adeleeuw/digitalhealth/data-visualiser@sha256:2f3e7e93a321e5179ad29d31814ea4df5bf2048a5ded8a7f9d5ae8b67329d246
        generation: 4
        image: sha256:2f3e7e93a321e5179ad29d31814ea4df5bf2048a5ded8a7f9d5ae8b67329d246
      tag: v2
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mongo"}]'
      openshift.io/host.generated: "true"
    creationTimestamp: "2023-01-30T03:24:52Z"
    labels:
      app: data-access-api
      app.kubernetes.io/component: data-access-api
      app.kubernetes.io/instance: data-access-api
      app.kubernetes.io/name: data-access-api
      app.kubernetes.io/part-of: eclipse-mosquitto-app
      app.openshift.io/runtime-version: v1997
    name: data-access-api
    namespace: digitalhealth-edge
    resourceVersion: "451618"
    uid: 676f47ef-263c-480f-9702-060428b45525
  spec:
    host: data-access-api-digitalhealth-edge.apps-crc.testing
    port:
      targetPort: 3005-tcp
    to:
      kind: Service
      name: data-access-api
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: "2023-01-30T03:24:52Z"
        status: "True"
        type: Admitted
      host: data-access-api-digitalhealth-edge.apps-crc.testing
      routerCanonicalHostname: router-default.apps-crc.testing
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"patient-vitals-api"}]'
      openshift.io/host.generated: "true"
    creationTimestamp: "2023-01-24T03:02:12Z"
    labels:
      app: data-generator
      app.kubernetes.io/component: data-generator
      app.kubernetes.io/instance: data-generator
      app.kubernetes.io/name: data-generator
      app.kubernetes.io/part-of: eclipse-mosquitto-app
      app.openshift.io/runtime-version: v2
    name: data-generator
    namespace: digitalhealth-edge
    resourceVersion: "269484"
    uid: 55d53bf5-3e2d-4209-a2d6-2e08cf8eb01e
  spec:
    host: data-generator-digitalhealth-edge.apps-crc.testing
    port:
      targetPort: 3002-tcp
    to:
      kind: Service
      name: data-generator
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: "2023-01-24T03:02:12Z"
        status: "True"
        type: Admitted
      host: data-generator-digitalhealth-edge.apps-crc.testing
      routerCanonicalHostname: router-default.apps-crc.testing
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: "2023-01-24T03:56:33Z"
    labels:
      app: eclipse-mosquitto
      app.kubernetes.io/component: eclipse-mosquitto
      app.kubernetes.io/instance: eclipse-mosquitto
      app.kubernetes.io/name: eclipse-mosquitto
      app.kubernetes.io/part-of: eclipse-mosquitto-app
      app.openshift.io/runtime-version: 1.6.15
    name: eclipse-mosquitto
    namespace: digitalhealth-edge
    resourceVersion: "197339"
    uid: 54e31353-f4cc-4d6f-95a3-5cfdeea6e2f0
  spec:
    host: eclipse-mosquitto-digitalhealth-edge.apps-crc.testing
    port:
      targetPort: 1883-tcp
    to:
      kind: Service
      name: eclipse-mosquitto
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: "2023-01-24T03:56:33Z"
        status: "True"
        type: Admitted
      host: eclipse-mosquitto-digitalhealth-edge.apps-crc.testing
      routerCanonicalHostname: router-default.apps-crc.testing
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: "2023-01-24T01:37:58Z"
    name: grafana
    namespace: digitalhealth-edge
    resourceVersion: "161391"
    uid: a98cbe90-4224-4619-b2b5-2b96b2a03e39
  spec:
    host: grafana-digitalhealth-edge.apps-crc.testing
    port:
      targetPort: grafana
    to:
      kind: Service
      name: grafana-service
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: "2023-01-24T01:37:58Z"
        status: "True"
        type: Admitted
      host: grafana-digitalhealth-edge.apps-crc.testing
      routerCanonicalHostname: router-default.apps-crc.testing
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"my-cluster-entity-operator"}]'
      openshift.io/host.generated: "true"
    creationTimestamp: "2023-02-15T02:23:55Z"
    labels:
      app: kafdrop
      app.kubernetes.io/component: kafdrop
      app.kubernetes.io/instance: kafdrop
      app.kubernetes.io/name: kafdrop
      app.openshift.io/runtime-version: latest
    name: kafdrop
    namespace: digitalhealth-edge
    resourceVersion: "414841"
    uid: 63aa3e1c-148a-4f42-94b5-6ab9fd554d86
  spec:
    host: kafdrop-digitalhealth-edge.apps-crc.testing
    port:
      targetPort: 9000-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: kafdrop
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: "2023-02-15T02:23:55Z"
        status: "True"
        type: Admitted
      host: kafdrop-digitalhealth-edge.apps-crc.testing
      routerCanonicalHostname: router-default.apps-crc.testing
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: "2023-01-25T03:44:25Z"
    labels:
      app: kafka
      app.kubernetes.io/component: kafka
      app.kubernetes.io/instance: kafka
      app.kubernetes.io/name: kafka
      app.kubernetes.io/part-of: eclipse-mosquitto-app
      app.openshift.io/runtime-version: latest
    name: kafka
    namespace: digitalhealth-edge
    resourceVersion: "256705"
    uid: 79c626a0-5da3-46db-9884-d6ae20891d06
  spec:
    host: kafka-digitalhealth-edge.apps-crc.testing
    port:
      targetPort: 9092-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: kafka
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: "2023-01-25T03:44:25Z"
        status: "True"
        type: Admitted
      host: kafka-digitalhealth-edge.apps-crc.testing
      routerCanonicalHostname: router-default.apps-crc.testing
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: "2023-01-25T11:05:16Z"
    labels:
      app: mongo
      app.kubernetes.io/component: mongo
      app.kubernetes.io/instance: mongo
      app.kubernetes.io/name: mongo
      app.kubernetes.io/part-of: eclipse-mosquitto-app
      app.openshift.io/runtime-version: latest
    name: mongo
    namespace: digitalhealth-edge
    resourceVersion: "299298"
    uid: a1dfb136-4d79-422a-a2cf-4acd83a7c4d8
  spec:
    host: mongo-digitalhealth-edge.apps-crc.testing
    port:
      targetPort: 27017-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: mongo
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: "2023-01-25T11:05:16Z"
        status: "True"
        type: Admitted
      host: mongo-digitalhealth-edge.apps-crc.testing
      routerCanonicalHostname: router-default.apps-crc.testing
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: "2023-01-24T02:58:19Z"
    labels:
      app: mqtt-consumer
      app.kubernetes.io/component: mqtt-consumer
      app.kubernetes.io/instance: mqtt-consumer
      app.kubernetes.io/name: mqtt-consumer
      app.kubernetes.io/part-of: eclipse-mosquitto-app
      app.openshift.io/runtime-version: v1
    name: mqtt-consumer
    namespace: digitalhealth-edge
    resourceVersion: "179883"
    uid: 4e876451-ceba-43ac-af1f-eccb9e4a66dd
  spec:
    host: mqtt-consumer-digitalhealth-edge.apps-crc.testing
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: mqtt-consumer
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: "2023-01-24T02:58:19Z"
        status: "True"
        type: Admitted
      host: mqtt-consumer-digitalhealth-edge.apps-crc.testing
      routerCanonicalHostname: router-default.apps-crc.testing
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      app.openshift.io/connects-to: '[{"apiVersion":"apps.openshift.io/v1","kind":"DeploymentConfig","name":"postgresql"}]'
      openshift.io/host.generated: "true"
    creationTimestamp: "2023-01-24T03:47:31Z"
    labels:
      app: mqtt-python
      app.kubernetes.io/component: mqtt-python
      app.kubernetes.io/instance: mqtt-python
      app.kubernetes.io/name: mqtt-python
      app.kubernetes.io/part-of: eclipse-mosquitto-app
      app.openshift.io/runtime-version: v4
    name: mqtt-python
    namespace: digitalhealth-edge
    resourceVersion: "215452"
    uid: ab3d8946-aae8-4af5-922c-f6b886720265
  spec:
    host: mqtt-python-digitalhealth-edge.apps-crc.testing
    port:
      targetPort: 3000-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: mqtt-python
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: "2023-01-24T03:47:31Z"
        status: "True"
        type: Admitted
      host: mqtt-python-digitalhealth-edge.apps-crc.testing
      routerCanonicalHostname: router-default.apps-crc.testing
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: "2023-01-25T04:00:01Z"
    labels:
      app: eclipse-mosquitto-app
      app.kubernetes.io/instance: my-cluster
      app.kubernetes.io/managed-by: strimzi-cluster-operator
      app.kubernetes.io/name: kafka
      app.kubernetes.io/part-of: strimzi-my-cluster
      strimzi.io/cluster: my-cluster
      strimzi.io/discovery: "true"
      strimzi.io/kind: Kafka
      strimzi.io/name: my-cluster-kafka
    name: my-cluster-kafka-bootstrap
    namespace: digitalhealth-edge
    resourceVersion: "262486"
    uid: 9b8a6d30-4e1d-49df-993b-d807d31c86e9
  spec:
    host: my-cluster-kafka-bootstrap-digitalhealth-edge.apps-crc.testing
    port:
      targetPort: tcp-replication
    to:
      kind: Service
      name: my-cluster-kafka-bootstrap
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: "2023-01-25T04:00:01Z"
        status: "True"
        type: Admitted
      host: my-cluster-kafka-bootstrap-digitalhealth-edge.apps-crc.testing
      routerCanonicalHostname: router-default.apps-crc.testing
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: "2023-01-25T04:00:30Z"
    labels:
      app: eclipse-mosquitto-app
      app.kubernetes.io/instance: my-cluster
      app.kubernetes.io/managed-by: strimzi-cluster-operator
      app.kubernetes.io/name: kafka
      app.kubernetes.io/part-of: strimzi-my-cluster
      strimzi.io/cluster: my-cluster
      strimzi.io/kind: Kafka
      strimzi.io/name: my-cluster-kafka
    name: my-cluster-kafka-brokers
    namespace: digitalhealth-edge
    resourceVersion: "262605"
    uid: afeb4a1f-8b36-4972-a521-7e1d3b638b5d
  spec:
    host: my-cluster-kafka-brokers-digitalhealth-edge.apps-crc.testing
    port:
      targetPort: tcp-ctrlplane
    to:
      kind: Service
      name: my-cluster-kafka-brokers
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: "2023-01-25T04:00:30Z"
        status: "True"
        type: Admitted
      host: my-cluster-kafka-brokers-digitalhealth-edge.apps-crc.testing
      routerCanonicalHostname: router-default.apps-crc.testing
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"my-cluster-entity-operator"}]'
      openshift.io/host.generated: "true"
    creationTimestamp: "2023-01-25T04:11:45Z"
    labels:
      app: nodejs-kafka
      app.kubernetes.io/component: nodejs-kafka
      app.kubernetes.io/instance: nodejs-kafka
      app.kubernetes.io/name: nodejs-kafka
      app.kubernetes.io/part-of: eclipse-mosquitto-app
      app.openshift.io/runtime-version: v26
    name: nodejs-kafka
    namespace: digitalhealth-edge
    resourceVersion: "322602"
    uid: a0c843c9-9b4e-4ae9-986f-c49493146485
  spec:
    host: nodejs-kafka-digitalhealth-edge.apps-crc.testing
    port:
      targetPort: 3000-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: nodejs-kafka
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: "2023-01-25T04:11:45Z"
        status: "True"
        type: Admitted
      host: nodejs-kafka-digitalhealth-edge.apps-crc.testing
      routerCanonicalHostname: router-default.apps-crc.testing
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mqtt-python"}]'
      openshift.io/host.generated: "true"
    creationTimestamp: "2023-01-24T03:00:01Z"
    labels:
      app: patient-vitals-api
      app.kubernetes.io/component: patient-vitals-api
      app.kubernetes.io/instance: patient-vitals-api
      app.kubernetes.io/name: patient-vitals-api
      app.kubernetes.io/part-of: eclipse-mosquitto-app
      app.openshift.io/runtime-version: v11
    name: patient-vitals-api
    namespace: digitalhealth-edge
    resourceVersion: "264257"
    uid: 18111b0c-86ef-4299-9627-83a3e1e8bd77
  spec:
    host: patient-vitals-api-digitalhealth-edge.apps-crc.testing
    port:
      targetPort: 3000-tcp
    to:
      kind: Service
      name: patient-vitals-api
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: "2023-01-24T03:00:01Z"
        status: "True"
        type: Admitted
      host: patient-vitals-api-digitalhealth-edge.apps-crc.testing
      routerCanonicalHostname: router-default.apps-crc.testing
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: "2023-01-24T03:45:13Z"
    labels:
      template: postgresql-persistent-template
      template.openshift.io/template-instance-owner: 50291061-0b46-4711-a488-cb2ef656fef6
    name: postgresql
    namespace: digitalhealth-edge
    resourceVersion: "190808"
    uid: 176f743d-bd9f-497a-9931-811dfba40c49
  spec:
    host: postgresql-digitalhealth-edge.apps-crc.testing
    port:
      targetPort: postgresql
    to:
      kind: Service
      name: postgresql
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: "2023-01-24T03:45:13Z"
        status: "True"
        type: Admitted
      host: postgresql-digitalhealth-edge.apps-crc.testing
      routerCanonicalHostname: router-default.apps-crc.testing
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"my-cluster-entity-operator"}]'
      openshift.io/host.generated: "true"
    creationTimestamp: "2023-01-30T02:32:31Z"
    labels:
      app: py-kafka
      app.kubernetes.io/component: py-kafka
      app.kubernetes.io/instance: py-kafka
      app.kubernetes.io/name: py-kafka
      app.kubernetes.io/part-of: eclipse-mosquitto-app
      app.openshift.io/runtime-version: v31
    name: py-kafka
    namespace: digitalhealth-edge
    resourceVersion: "333562"
    uid: 640771d3-fe06-4311-b079-2c44096bd9ee
  spec:
    host: py-kafka-digitalhealth-edge.apps-crc.testing
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: py-kafka
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: "2023-01-30T02:32:31Z"
        status: "True"
        type: Admitted
      host: py-kafka-digitalhealth-edge.apps-crc.testing
      routerCanonicalHostname: router-default.apps-crc.testing
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"data-access-api"}]'
      openshift.io/host.generated: "true"
    creationTimestamp: "2023-01-30T04:36:35Z"
    labels:
      app: react-frontend
      app.kubernetes.io/component: react-frontend
      app.kubernetes.io/instance: react-frontend
      app.kubernetes.io/name: react-frontend
      app.kubernetes.io/part-of: eclipse-mosquitto-app
      app.openshift.io/runtime-version: v2
    name: react-frontend
    namespace: digitalhealth-edge
    resourceVersion: "432333"
    uid: 3b6024dc-2f9e-42b5-b356-8105d9fa8dea
  spec:
    host: react-frontend-digitalhealth-edge.apps-crc.testing
    port:
      targetPort: 3000-tcp
    to:
      kind: Service
      name: react-frontend
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: "2023-01-30T04:36:35Z"
        status: "True"
        type: Admitted
      host: react-frontend-digitalhealth-edge.apps-crc.testing
      routerCanonicalHostname: router-default.apps-crc.testing
      routerName: default
      wildcardPolicy: None
- apiVersion: platform.confluent.io/v1beta1
  kind: KafkaTopic
  metadata:
    creationTimestamp: "2023-01-25T03:49:37Z"
    finalizers:
    - kafkatopic.finalizers.platform.confluent.io
    generation: 1
    labels:
      app: eclipse-mosquitto-app
    name: vitals
    namespace: digitalhealth-edge
    resourceVersion: "258650"
    uid: 127b83e9-b610-4b12-a60a-3e8797e1c389
  spec:
    name: vitals
    partitionCount: 3
    replicas: 5
  status:
    appState: Unknown
    conditions:
    - lastProbeTime: "2023-01-25T03:49:37Z"
      lastTransitionTime: "2023-01-25T03:49:37Z"
      message: Application state is unknown
      reason: AppStateUnknown
      status: Unknown
      type: platform.confluent.io/app-ready
    state: ERROR
kind: List
metadata:
  resourceVersion: ""
